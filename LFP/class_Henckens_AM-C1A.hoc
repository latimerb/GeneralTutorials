//begintemplate Henckens_Pyr

/*
public init, connect_sections, size_sections, append_sections, define_synapses
public mechinit, insert_mechs, set_biophys, get_root
public  pre_list, connect_pre, is_art, is_connected, gid, randi
public soma, dend, axon
public all, soma_list, axon_list, dendrite_list
public x, y, z, position, myroot, myrootsec, Vrest
public NumSoma, NumDend, NumAxon
*/

// strings
strdef myroot, myname

// objects
objref syn, pre_list, templist, rootlist, myrootsec, this

// external variables
//external numCellTypes, cellType

// create the sections
create soma[1], dend[35], apic[22]//, axon[11]

proc init() {
	//gid = $1
	//randi = $2
	
	// morphology
	connect_sections()	// local fcn: connect soma, dendrites, axon initial segment
	size_sections()		// local fcn: set the size dimensions of each section
	define_shape()		// builtin fcn: fill in 3d info for sections defined by only L and diam, translate 3d points for consistency with their connections 
  	//append_sections()	// local fcn: append all sections to the section list
	//set_nseg()			// local fcn: set the number of segments in each section
	//get_root()			// local fcn: perform morphology checks

	// electrophysiology
	mechinit()			// local fcn: set values for max conductances and reversal potentials of ion channels and other ephys parameters that are subject to fitting
	insert_mechs()		// local fcn: insert ion channels and actually set values determined in the mechinit fcn
	//set_chanparams()	// local fcn: after all channels have been inserted, then their other parameters can be set	

	// synapses
	pre_list = new List() // define a list for the presynaptic connections	
	//define_synapses($3)	// local fcn: define all possible synaptic connections received by this cell
}

proc connect_sections() { local i
	connect dend[0](0), soma[0](0.5)
  for i = 1, 2 connect dend[i](0), dend(1)
  connect dend[3](0), soma(0.5)
  for i = 4, 6 connect dend[i](0), dend[i-1](1)
  connect dend[7](0), dend[5](1)
  connect dend[8](0), dend[4](1)
  for i = 9, 10 connect dend[i](0), dend[8](1)
  for i = 11, 12 connect dend[i](0), dend[10](1)
  connect dend[13](0), dend[3](1)
  for i = 14, 15 connect dend[i](0), dend[i-1](1)
  connect dend[16](0), dend[14](1)
  for i = 17, 18 connect dend[i](0), dend[16](1)
  connect dend[19](0), dend[13](1)
  for i = 20, 21 connect dend[i](0), dend[19](1)
  for i = 22, 23 connect dend[i](0), soma(0.5)
  for i = 24, 25 connect dend[i](0), dend[23](1)
  for i = 26, 27 connect dend[i](0), dend[25](1)
  connect dend[28](0), soma(0.5)
  for i = 29, 30 connect dend[i](0), dend[28](1)
  for i = 31, 32 connect dend[i](0), dend[i-1](1)
  connect dend[33](0), dend[31](1)
  connect dend[34](0), dend[30](1)
  connect apic(0), soma(0.5)
  for i = 1, 3 connect apic[i](0), apic[i-1](1)
  connect apic[4](0), apic[2](1)
  for i = 5, 6 connect apic[i](0), apic[4](1)
  connect apic[7](0), apic[1](1)
  connect apic[8](0), apic(1)
  connect apic[9](0), apic(0)
  for i = 10, 11 connect apic[i](0), apic[9](1)
  for i = 12, 13 connect apic[i](0), apic[11](1)
  for i = 14, 15 connect apic[i](0), apic[13](1)
  for i = 16, 17 connect apic[i](0), apic[15](1)
  for i = 18, 19 connect apic[i](0), apic[17](1)
  for i = 20, 21 connect apic[i](0), apic[19](1)
	//connect axon(0), soma[0](0.5)
	//for i = 1, 10 connect axon[i](0), axon[i-1](1)
    basic_shape()
}

proc shape3d_1() {
  soma[0] {pt3dclear()
	pt3dadd(-12.7065, 0, 0, 25.413)
	pt3dadd(0, 0, 0, 25.413)
	pt3dadd(12.7065, 0, 0, 25.413)
  }
  dend[0] {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(7.34, -4.08, -5.69, 2.3)
	pt3dadd(8.13, -4.99, -9.1, 2.3)
	pt3dadd(9.22, -2.98, -12.6, 2.06)
	pt3dadd(11.54, -4.14, -15.47, 2.06)
	pt3dadd(13.83, -5.14, -17.27, 2.06)
	pt3dadd(15.83, -6.46, -20.03, 2.06)
	pt3dadd(18.64, -10.02, -22.02, 2.06)
	pt3dadd(19.35, -11.87, -25.41, 1.93)
	pt3dadd(19.97, -13.3, -27.72, 1.93)
	pt3dadd(22.34, -13.52, -29.55, 1.93)
	pt3dadd(26.78, -13.58, -28.89, 1.57)
  }
  dend[1] {pt3dclear()
	pt3dadd(26.78, -13.58, -28.89, 1.57)
	pt3dadd(28.85, -12.07, -32.71, 0.97)
	pt3dadd(30.68, -11.86, -36.47, 0.97)
	pt3dadd(33.32, -11.48, -39.43, 0.97)
	pt3dadd(36.11, -10.91, -43.49, 0.97)
	pt3dadd(38.58, -11.21, -45.35, 0.97)
	pt3dadd(40.28, -11.62, -45.9, 0.97)
	pt3dadd(41.1, -11.44, -46.17, 0.97)
	pt3dadd(42.41, -7.98, -49.74, 0.97)
	pt3dadd(43.16, -5.65, -52.07, 0.97)
	pt3dadd(45.05, -4.85, -54.79, 0.97)
	pt3dadd(46.46, -3.18, -58.4, 0.97)
	pt3dadd(47.64, -0.4, -62.97, 0.97)
	pt3dadd(48.47, 2.87, -66.38, 0.97)
	pt3dadd(50.12, 4.27, -69.02, 0.97)
	pt3dadd(51.67, 5.92, -70.57, 0.97)
	pt3dadd(53.03, 6.31, -75.22, 0.97)
	pt3dadd(53.87, 8.4, -78.63, 0.97)
	pt3dadd(55.76, 10.22, -81.34, 0.97)
	pt3dadd(55.48, 10.08, -84.41, 0.97)
	pt3dadd(54.89, 9.24, -88.43, 0.97)
	pt3dadd(55.11, 8.93, -91.66, 0.97)
  }
  dend[2] {pt3dclear()
	pt3dadd(26.78, -13.58, -28.89, 1.57)
	pt3dadd(29.56, -15.77, -29.81, 1.09)
	pt3dadd(30.41, -17.81, -31.15, 1.09)
	pt3dadd(30.13, -19.33, -33.17, 1.09)
	pt3dadd(29.26, -20.49, -39.2, 1.09)
	pt3dadd(30.08, -19.79, -40.52, 1.09)
	pt3dadd(30.12, -18.74, -43.68, 1.09)
	pt3dadd(30.15, -17.01, -46.83, 1.09)
	pt3dadd(31.09, -16.54, -50.29, 1.09)
	pt3dadd(31.22, -16.95, -53.49, 1.09)
	pt3dadd(30.62, -17.61, -56.45, 1.09)
	pt3dadd(33.49, -16.97, -59.49, 1.09)
	pt3dadd(35.35, -15.49, -60.09, 1.09)
	pt3dadd(35.47, -14.53, -63.28, 1.09)
	pt3dadd(36.83, -14.83, -67.93, 1.09)
	pt3dadd(36.97, -15.56, -71.14, 1.09)
	pt3dadd(36.32, -17.34, -75.14, 1.09)
	pt3dadd(34.92, -18.52, -78.9, 1.09)
	pt3dadd(35.22, -19.61, -82.15, 1.09)
	pt3dadd(36.4, -20.6, -84.65, 1.09)
	pt3dadd(37.84, -21.85, -88.28, 1.09)
	pt3dadd(38.71, -22.84, -91.72, 1.09)
	pt3dadd(38.92, -21.78, -95.99, 1.09)
	pt3dadd(38.25, -20.82, -99.97, 1.09)
	pt3dadd(38.77, -20.97, -102.25, 0.85)
  }
  dend[3] {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(-2.64, -11.88, -3.52, 6.05)
	pt3dadd(-4.04, -16.67, -5.19, 4.84)
	pt3dadd(-5.11, -21.28, -6.97, 4.23)
	pt3dadd(-7.07, -25.82, -8.45, 4.23)
	pt3dadd(-8.33, -29.59, -9.11, 4.23)
	pt3dadd(-9.2, -32.59, -8.84, 4.23)
  }
  dend[4] {pt3dclear()
	pt3dadd(-9.2, -32.59, -8.84, 4.23)
	pt3dadd(-7.9, -35.15, -7.17, 1.93)
	pt3dadd(-7.41, -38.76, -5.25, 1.93)
  }
  dend[5] {pt3dclear()
	pt3dadd(-7.41, -38.76, -5.25, 1.93)
	pt3dadd(-5.23, -40.38, -3.86, 1.45)
	pt3dadd(-3.05, -42.33, -2.48, 1.45)
	pt3dadd(-0.53, -44.11, -2.25, 1.45)
	pt3dadd(0.67, -46.76, -0.56, 1.45)
	pt3dadd(2.34, -48.23, 2.04, 1.45)
	pt3dadd(5.07, -50.44, 4.29, 1.45)
	pt3dadd(7.75, -52.74, 5.51, 1.45)
	pt3dadd(9.29, -54.52, 6.05, 1.21)
	pt3dadd(9.55, -55.46, 5.96, 1.21)
  }
  dend[6] {pt3dclear()
	pt3dadd(9.55, -55.46, 5.96, 1.21)
	pt3dadd(11.71, -57.98, 3.14, 0.97)
	pt3dadd(13.67, -58.82, 2.5, 0.97)
	pt3dadd(16.91, -58.44, 1.45, 0.97)
	pt3dadd(18.87, -59.45, 1.86, 0.97)
	pt3dadd(24.98, -63.07, 0.9, 0.97)
	pt3dadd(28.55, -62.52, -0.25, 0.97)
	pt3dadd(32.46, -63, -1.53, 0.97)
	pt3dadd(35.87, -62.44, -2.63, 0.97)
	pt3dadd(40.57, -59.83, -4.15, 0.97)
	pt3dadd(42.61, -58.16, -6.91, 0.97)
	pt3dadd(45.47, -57.18, -8.89, 0.97)
	pt3dadd(46.25, -58.43, -12.31, 0.85)
	pt3dadd(45.19, -59.95, -16.18, 0.85)
	pt3dadd(44.21, -61.56, -20.07, 0.85)
  }
  dend[7] {pt3dclear()
	pt3dadd(9.55, -55.46, 5.96, 1.21)
	pt3dadd(12.28, -55.1, 7.18, 1.21)
	pt3dadd(14.13, -55.86, 7.62, 1.21)
	pt3dadd(16.99, -58.14, 7.73, 1.21)
	pt3dadd(19.97, -60.45, 9.91, 1.09)
	pt3dadd(21.69, -63.26, 10.39, 1.09)
	pt3dadd(24.95, -67.85, 11.41, 1.09)
	pt3dadd(25.09, -75.81, 11.32, 1.09)
	pt3dadd(24.41, -81.54, 11.52, 0.85)
	pt3dadd(25.41, -84.78, 11.18, 0.85)
	pt3dadd(25.43, -86.49, 11.16, 0.85)
  }
  dend[8] {pt3dclear()
	pt3dadd(-7.41, -38.76, -5.25, 1.93)
	pt3dadd(-9.12, -42.13, -2.6, 1.21)
	pt3dadd(-10.03, -45.32, -0.22, 1.21)
	pt3dadd(-10.95, -50.29, 0.05, 1.21)
	pt3dadd(-13.51, -55.79, 0.86, 1.21)
	pt3dadd(-16.24, -60.61, 1.72, 1.21)
	pt3dadd(-18.57, -65, 3.52, 1.21)
	pt3dadd(-19.28, -67.15, 3.74, 1.33)
  }
  dend[9] {pt3dclear()
	pt3dadd(-19.28, -67.15, 3.74, 1.33)
	pt3dadd(-20.21, -70.56, 1.92, 1.09)
	pt3dadd(-18.76, -75.07, 0.38, 1.09)
	pt3dadd(-16.71, -77.36, -0.29, 1.09)
	pt3dadd(-16.75, -79.83, -1.34, 1.09)
	pt3dadd(-18.57, -84.72, -1.83, 1.09)
	pt3dadd(-18.69, -88.13, -2.85, 1.09)
	pt3dadd(-19.14, -92.93, -2.73, 1.09)
	pt3dadd(-17.88, -96.59, -3.16, 1.09)
	pt3dadd(-19.62, -101.21, -3.67, 1.09)
	pt3dadd(-21.73, -104.03, -7.2, 0.97)
	pt3dadd(-23.53, -106.85, -9.78, 0.97)
	pt3dadd(-24.51, -110.51, -12.63, 0.97)
	pt3dadd(-23.88, -112.79, -16.01, 0.97)
	pt3dadd(-23.27, -115.26, -17.27, 0.97)
	pt3dadd(-22.33, -118.24, -18.64, 0.97)
	pt3dadd(-21.07, -121.03, -20.11, 0.97)
	pt3dadd(-19.57, -123.23, -21.66, 0.97)
	pt3dadd(-17.61, -125.44, -22.31, 0.97)
	pt3dadd(-15.43, -125.39, -27.23, 0.97)
	pt3dadd(-11.9, -125.41, -30.48, 0.97)
	pt3dadd(-9.43, -127.14, -37.61, 0.97)
	pt3dadd(-8.19, -128.74, -39.07, 0.97)
	pt3dadd(-7.06, -133.07, -41.56, 0.97)
	pt3dadd(-5.98, -135.88, -41.93, 0.97)
	pt3dadd(-6.23, -137.91, -46.06, 0.97)
	pt3dadd(-6.06, -140.18, -50.34, 0.97)
	pt3dadd(-6.84, -142.75, -51.15, 0.97)
	pt3dadd(-7.66, -144.52, -55.09, 0.97)
	pt3dadd(-9.14, -145.62, -57.77, 0.97)
	pt3dadd(-10.1, -146.14, -58.51, 0.97)
  }
  dend[10] {pt3dclear()
	pt3dadd(-19.28, -67.15, 3.74, 1.33)
	pt3dadd(-22.32, -67.97, 6.83, 1.09)
	pt3dadd(-24.85, -67.74, 8.7, 1.09)
	pt3dadd(-27.14, -67.95, 10.5, 1.09)
	pt3dadd(-29.2, -69.61, 13.27, 1.09)
	pt3dadd(-32.53, -72.83, 16.44, 1.09)
	pt3dadd(-33.08, -73.72, 20.82, 1.09)
	pt3dadd(-35.07, -74.47, 21.47, 1.09)
  }
  dend[11] {pt3dclear()
	pt3dadd(-35.07, -74.47, 21.47, 1.09)
	pt3dadd(-37.37, -75.71, 25.37, 0.85)
	pt3dadd(-42.53, -78.5, 25.98, 0.85)
	pt3dadd(-44.54, -81.17, 25.57, 0.85)
	pt3dadd(-46.58, -83.73, 23.07, 0.85)
	pt3dadd(-50.18, -85.2, 21.08, 0.85)
	pt3dadd(-53.23, -86.07, 19.97, 0.85)
	pt3dadd(-59.23, -85.96, 20.87, 0.85)
	pt3dadd(-62.45, -88.73, 20.85, 0.85)
	pt3dadd(-64.06, -90.1, 21.37, 0.85)
	pt3dadd(-66.41, -91.42, 22.13, 0.85)
	pt3dadd(-68.35, -92.63, 22.76, 0.85)
	pt3dadd(-70.5, -95.99, 22.39, 0.85)
	pt3dadd(-74.35, -100.12, 22.58, 0.85)
	pt3dadd(-77.14, -103.47, 21.36, 0.85)
	pt3dadd(-80.04, -106.07, 22.3, 0.85)
	pt3dadd(-83.26, -108.84, 22.28, 0.85)
	pt3dadd(-85.85, -110.07, 23.12, 0.85)
	pt3dadd(-88.7, -110.52, 24.05, 0.85)
	pt3dadd(-91.45, -110.89, 24.94, 0.85)
	pt3dadd(-95.76, -112.91, 27.39, 0.85)
	pt3dadd(-99.75, -114.94, 29.73, 0.85)
	pt3dadd(-105.74, -121.51, 33.75, 0.85)
	pt3dadd(-108.19, -121.72, 35.6, 0.85)
	pt3dadd(-113.06, -121.25, 36.14, 0.85)
	pt3dadd(-115.16, -121.26, 35.77, 0.85)
  }
  dend[12] {pt3dclear()
	pt3dadd(-35.07, -74.47, 21.47, 1.09)
	pt3dadd(-35.78, -74.88, 23.8, 1.09)
	pt3dadd(-37.82, -75.51, 25.51, 1.09)
	pt3dadd(-39.74, -77.02, 30.34, 1.09)
	pt3dadd(-40.19, -77.3, 33.64, 1.09)
	pt3dadd(-40.71, -78.69, 36.96, 1.09)
	pt3dadd(-41.79, -81.2, 39.4, 1.09)
	pt3dadd(-42.69, -82.68, 41.79, 1.09)
	pt3dadd(-45.96, -84.62, 44.95, 1.09)
	pt3dadd(-48.09, -85.33, 46.69, 1.09)
	pt3dadd(-50.29, -86.65, 48.46, 1.09)
	pt3dadd(-51.67, -88.47, 49.95, 1.09)
	pt3dadd(-54.44, -91.25, 52.94, 1.09)
	pt3dadd(-59.3, -94.9, 55.56, 1.09)
	pt3dadd(-64.46, -98.71, 56.17, 0.97)
	pt3dadd(-67.9, -102.41, 55.17, 0.97)
	pt3dadd(-71.13, -104.5, 56.21, 0.97)
	pt3dadd(-72.97, -107.68, 56.8, 0.97)
	pt3dadd(-74.41, -110.44, 57.26, 0.97)
	pt3dadd(-76.09, -114.13, 57.78, 0.97)
  }
}
proc shape3d_2() {
  dend[12] {	pt3dadd(-78.69, -115.87, 59.67, 0.97)
	pt3dadd(-82.19, -117.37, 61.86, 0.97)
	pt3dadd(-84.63, -118.26, 63.7, 0.97)
	pt3dadd(-87.07, -120.69, 65.54, 0.97)
	pt3dadd(-89.87, -121.78, 69.6, 0.97)
	pt3dadd(-92.27, -122.25, 73.54, 0.97)
	pt3dadd(-92.41, -121.68, 76.74, 0.97)
	pt3dadd(-93.44, -120.85, 80.23, 0.97)
  }
  dend[13] {pt3dclear()
	pt3dadd(-9.2, -32.59, -8.84, 4.23)
	pt3dadd(-12.85, -36.02, -10.82, 3.51)
	pt3dadd(-14.91, -38.59, -13.32, 3.51)
  }
  dend[14] {pt3dclear()
	pt3dadd(-14.91, -38.59, -13.32, 3.51)
	pt3dadd(-14.22, -41.14, -14.61, 2.54)
	pt3dadd(-15.44, -44.04, -17.38, 2.54)
	pt3dadd(-15.08, -45.9, -19.61, 2.54)
	pt3dadd(-13.39, -48.77, -22.28, 2.18)
	pt3dadd(-11.65, -50.89, -23.91, 1.81)
	pt3dadd(-10.79, -52.22, -27.35, 1.81)
	pt3dadd(-10.33, -53.15, -29.6, 1.81)
	pt3dadd(-10.14, -53.63, -31.77, 1.81)
	pt3dadd(-10.28, -55.51, -31.74, 1.81)
	pt3dadd(-11.9, -57.07, -31.22, 1.81)
	pt3dadd(-13.82, -58.46, -31.65, 1.81)
	pt3dadd(-13.95, -61.01, -32.67, 1.81)
	pt3dadd(-12.35, -62.95, -35.3, 1.81)
	pt3dadd(-12.7, -65.41, -38.36, 1.81)
	pt3dadd(-12.38, -67.87, -41.63, 1.81)
	pt3dadd(-11.68, -70.75, -43.97, 1.81)
	pt3dadd(-11.28, -73.11, -47.27, 1.81)
	pt3dadd(-11.06, -74.98, -50.5, 1.81)
	pt3dadd(-10.2, -76.83, -52.9, 1.81)
  }
  dend[15] {pt3dclear()
	pt3dadd(-10.2, -76.83, -52.9, 1.81)
	pt3dadd(-7.11, -78, -52.86, 0.73)
	pt3dadd(-4.53, -78.66, -52.65, 0.73)
	pt3dadd(-3.03, -79.78, -48.94, 0.73)
	pt3dadd(-0.71, -80.9, -46.54, 0.73)
	pt3dadd(2.29, -83.7, -45.43, 0.73)
	pt3dadd(5.43, -85.83, -43.31, 0.73)
	pt3dadd(6.49, -89.16, -42.62, 0.73)
	pt3dadd(7.9, -93.17, -42.04, 0.73)
	pt3dadd(8.4, -97.27, -41.18, 0.73)
	pt3dadd(8.76, -101.73, -41.32, 0.73)
	pt3dadd(9.39, -106.75, -42.6, 0.73)
	pt3dadd(9.45, -111.88, -43.69, 0.73)
	pt3dadd(11.11, -116.49, -43.2, 0.73)
	pt3dadd(12.49, -120.33, -41.56, 0.73)
	pt3dadd(14.18, -122.64, -40.02, 0.73)
	pt3dadd(14.83, -125.56, -38.15, 0.73)
	pt3dadd(18.14, -128.54, -36.08, 0.73)
	pt3dadd(19.83, -130.67, -34.54, 0.73)
  }
  dend[16] {pt3dclear()
	pt3dadd(-10.2, -76.83, -52.9, 1.81)
	pt3dadd(-11.2, -80.33, -54.69, 1.45)
	pt3dadd(-10.24, -83.47, -57.12, 1.45)
	pt3dadd(-9.38, -87.55, -58.47, 1.45)
	pt3dadd(-9.57, -90.54, -60.53, 1.45)
	pt3dadd(-9.11, -92.31, -62.79, 1.45)
	pt3dadd(-8.66, -94.43, -65.05, 1.21)
	pt3dadd(-8.87, -96.39, -66.04, 1.21)
	pt3dadd(-7.49, -100.1, -69.66, 1.21)
	pt3dadd(-6.77, -102.82, -73.07, 1.21)
	pt3dadd(-5.8, -106.63, -76.56, 1.21)
	pt3dadd(-4.24, -112.24, -80.25, 1.21)
	pt3dadd(-3.86, -114.08, -83.54, 1.21)
  }
  dend[17] {pt3dclear()
	pt3dadd(-3.86, -114.08, -83.54, 1.21)
	pt3dadd(-1.54, -114.04, -86.39, 0.85)
	pt3dadd(-1.98, -114.71, -89.41, 0.85)
	pt3dadd(-1.9, -115.31, -89.44, 0.85)
  }
  dend[18] {pt3dclear()
	pt3dadd(-3.86, -114.08, -83.54, 1.21)
	pt3dadd(-4.45, -117.5, -85.46, 1.21)
	pt3dadd(-4.01, -120.31, -85.62, 1.21)
	pt3dadd(-3.66, -123.73, -85.75, 1.21)
	pt3dadd(-3.05, -125.51, -87.01, 0.97)
	pt3dadd(-2.46, -127.81, -88.26, 0.97)
  }
  dend[19] {pt3dclear()
	pt3dadd(-14.91, -38.59, -13.32, 3.51)
	pt3dadd(-18.98, -41.26, -15.16, 2.54)
	pt3dadd(-21.14, -43.25, -15.52, 2.06)
  }
  dend[20] {pt3dclear()
	pt3dadd(-21.14, -43.25, -15.52, 2.06)
	pt3dadd(-21.7, -46.76, -14.3, 0.85)
	pt3dadd(-24.32, -49.94, -15.57, 0.85)
	pt3dadd(-26.45, -52.59, -18.04, 0.85)
	pt3dadd(-28.12, -55.6, -18.56, 0.85)
	pt3dadd(-29.3, -58.26, -19.24, 0.85)
	pt3dadd(-29.67, -60.56, -20.18, 0.85)
  }
  dend[21] {pt3dclear()
	pt3dadd(-21.14, -43.25, -15.52, 2.06)
	pt3dadd(-25.4, -45.58, -16.24, 1.57)
	pt3dadd(-29.17, -49.11, -17.14, 1.81)
	pt3dadd(-33.32, -52.22, -18.95, 1.81)
	pt3dadd(-36.82, -55.83, -20.99, 1.81)
	pt3dadd(-39.12, -59.17, -22.36, 1.81)
	pt3dadd(-42.05, -64.4, -23.53, 1.81)
	pt3dadd(-43.77, -67.13, -26.14, 1.81)
	pt3dadd(-45, -70.03, -28.9, 1.81)
	pt3dadd(-46.32, -72.5, -31.64, 1.81)
	pt3dadd(-48.53, -75.07, -34.09, 1.81)
	pt3dadd(-50.33, -77.72, -36.67, 1.81)
	pt3dadd(-53.18, -79.43, -39.96, 1.81)
	pt3dadd(-56.04, -80.46, -42.18, 1.81)
	pt3dadd(-59.38, -82.34, -45.31, 1.81)
	pt3dadd(-61.99, -83.96, -48.68, 1.81)
	pt3dadd(-65.43, -83.55, -51.76, 1.81)
	pt3dadd(-67.61, -87.48, -55.28, 1.81)
	pt3dadd(-67.4, -89.68, -57.46, 1.81)
	pt3dadd(-68.95, -92.4, -60.12, 1.81)
	pt3dadd(-68.65, -95.9, -62.34, 1.81)
	pt3dadd(-68.67, -99.04, -64.45, 1.81)
	pt3dadd(-70.01, -101.18, -66.13, 1.33)
  }
  dend[22] {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(9.36, -7.22, -1.1, 2.9)
	pt3dadd(12.07, -9.66, -2, 2.06)
	pt3dadd(15.18, -11.52, -3.02, 2.06)
	pt3dadd(18.07, -12.71, -0.81, 2.06)
	pt3dadd(21.76, -12.34, 1.14, 1.57)
	pt3dadd(25.07, -13.09, 2.16, 1.57)
	pt3dadd(28.23, -14.35, 2.17, 1.57)
	pt3dadd(31.35, -13.74, 4.32, 1.33)
	pt3dadd(34.06, -14.42, 7.64, 1.33)
	pt3dadd(37.13, -15.78, 8.73, 1.33)
	pt3dadd(40.36, -16.27, 9.78, 1.33)
	pt3dadd(44.96, -16.15, 10.39, 1.33)
	pt3dadd(51.44, -16.61, 10.38, 1.33)
	pt3dadd(53.68, -16.26, 11.75, 1.33)
	pt3dadd(55.48, -13.95, 14.33, 1.33)
	pt3dadd(57.66, -14.89, 15.72, 1.33)
	pt3dadd(63.29, -15.72, 18.09, 1.21)
	pt3dadd(66.63, -14.34, 21.21, 1.21)
	pt3dadd(69, -13.14, 24.65, 1.21)
  }
  dend[23] {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(10.61, -5.99, 6.9, 2.42)
	pt3dadd(13.02, -8.21, 10.32, 2.42)
	pt3dadd(15.01, -10.69, 12.81, 2.42)
	pt3dadd(16.53, -12.5, 15.46, 2.42)
  }
  dend[24] {pt3dclear()
	pt3dadd(16.53, -12.5, 15.46, 2.42)
	pt3dadd(16.14, -14.3, 15.58, 1.09)
	pt3dadd(15.37, -15.1, 18.98, 1.33)
	pt3dadd(14.15, -13.44, 23.59, 1.33)
	pt3dadd(11.88, -11.17, 28.55, 1.33)
	pt3dadd(9.86, -11.06, 33.42, 1.33)
	pt3dadd(6.89, -11.29, 37.54, 1.33)
	pt3dadd(6.34, -10.64, 41.93, 1.33)
	pt3dadd(4.44, -9.9, 43.6, 1.33)
	pt3dadd(1.51, -9.25, 44.56, 1.33)
	pt3dadd(-1.33, -10.74, 46.53, 1.09)
	pt3dadd(-1.69, -11.62, 49.8, 1.09)
	pt3dadd(-2.59, -12.76, 51.14, 0.85)
  }
  dend[25] {pt3dclear()
	pt3dadd(16.53, -12.5, 15.46, 2.42)
	pt3dadd(20.03, -13.23, 14.32, 1.33)
	pt3dadd(21.68, -15.6, 13.77, 1.33)
	pt3dadd(23.57, -18.07, 13.14, 1.33)
	pt3dadd(25.16, -17.89, 14.73, 1.33)
	pt3dadd(28.29, -16.42, 15.82, 1.33)
	pt3dadd(33.52, -12.7, 16.24, 1.33)
	pt3dadd(37.6, -11.4, 18.07, 1.33)
	pt3dadd(42.97, -9.4, 20.53, 1.33)
  }
  dend[26] {pt3dclear()
	pt3dadd(42.97, -9.4, 20.53, 1.33)
	pt3dadd(45.98, -7.35, 23.77, 0.85)
	pt3dadd(48.69, -5.97, 26.05, 0.85)
	pt3dadd(51.26, -4.93, 27.32, 0.85)
	pt3dadd(54.35, -2.96, 30.53, 0.85)
	pt3dadd(56.33, -2.2, 33.04, 0.85)
  }
  dend[27] {pt3dclear()
	pt3dadd(42.97, -9.4, 20.53, 1.33)
	pt3dadd(49.2, -11.32, 21.65, 1.09)
	pt3dadd(52.23, -12.75, 20.66, 1.09)
	pt3dadd(54.43, -13.32, 19.94, 1.09)
	pt3dadd(57.12, -15.26, 19.05, 1.09)
	pt3dadd(61.77, -18.38, 18.57, 1.09)
	pt3dadd(66.11, -20.46, 16.1, 1.09)
	pt3dadd(70.96, -23.9, 13.45, 1.09)
	pt3dadd(74.57, -27.46, 12.26, 1.09)
	pt3dadd(76.22, -30.86, 11.7, 1.09)
	pt3dadd(75.24, -38.13, 10.94, 1.09)
	pt3dadd(75.82, -43.7, 12.82, 0.85)
	pt3dadd(76.17, -45.75, 12.7, 0.85)
  }
  dend[28] {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(11.39, 6.71, 2.5, 2.06)
	pt3dadd(14.84, 9.56, 2.44, 1.45)
	pt3dadd(16.98, 14.27, 2.82, 1.45)
	pt3dadd(19.46, 17.8, 3.08, 1.45)
	pt3dadd(20.81, 20.3, 2.65, 1.45)
	pt3dadd(23.63, 23.32, 1.75, 1.45)
	pt3dadd(26.63, 25.32, 0.78, 1.45)
	pt3dadd(31.41, 27.17, -0.76, 1.45)
	pt3dadd(32.31, 27.96, -2.1, 1.45)
  }
  dend[29] {pt3dclear()
	pt3dadd(32.31, 27.96, -2.1, 1.45)
	pt3dadd(33.45, 31.41, -4.56, 1.09)
	pt3dadd(31.92, 33.71, -6.16, 1.09)
	pt3dadd(29.41, 36.18, -7.43, 1.09)
	pt3dadd(29.96, 38.84, -7.59, 1.09)
	pt3dadd(30.56, 43.46, -7.77, 1.09)
	pt3dadd(30.47, 48.53, -9.82, 1.09)
	pt3dadd(30.19, 54.94, -10.75, 1.09)
	pt3dadd(29.45, 59.82, -12.59, 1.09)
	pt3dadd(29.5, 63.33, -12.59, 1.09)
	pt3dadd(28.79, 71.88, -13.37, 1.09)
	pt3dadd(30.28, 78.82, -13.82, 0.97)
	pt3dadd(31.38, 83.28, -14.16, 0.97)
	pt3dadd(36.74, 91.97, -14.81, 0.97)
	pt3dadd(40.25, 97.65, -14.88, 0.97)
	pt3dadd(42.56, 103.23, -15.61, 0.97)
	pt3dadd(45.54, 107.11, -16.56, 0.97)
	pt3dadd(46.81, 112.26, -18, 0.97)
  }
}
proc shape3d_3() {
  dend[29] {	pt3dadd(47.61, 118.1, -20.34, 0.97)
	pt3dadd(48.63, 122.13, -20.65, 0.97)
	pt3dadd(48.03, 127.01, -21.48, 0.97)
	pt3dadd(49.41, 131.45, -18.76, 0.97)
	pt3dadd(50.34, 137.28, -19.03, 0.97)
	pt3dadd(51, 141.29, -17.13, 0.97)
	pt3dadd(52.51, 144.12, -16.55, 0.97)
	pt3dadd(55.78, 149.53, -16.54, 0.97)
	pt3dadd(56.74, 152.11, -16.84, 0.97)
	pt3dadd(57.28, 154.42, -17.01, 0.97)
	pt3dadd(59.37, 157.52, -17.67, 0.97)
	pt3dadd(62.68, 159, -17.69, 0.97)
	pt3dadd(64.41, 165.18, -18.23, 0.97)
	pt3dadd(64.46, 171.77, -19.26, 0.97)
	pt3dadd(66.49, 174.12, -20.97, 0.97)
	pt3dadd(67.35, 176.43, -21.24, 0.6)
  }
  dend[30] {pt3dclear()
	pt3dadd(32.31, 27.96, -2.1, 1.45)
	pt3dadd(36.81, 29.18, -0.41, 1.45)
  }
  dend[31] {pt3dclear()
	pt3dadd(36.81, 29.18, -0.41, 1.45)
	pt3dadd(40.25, 29.1, 2.67, 0.97)
	pt3dadd(41.67, 29.95, 4.31, 0.97)
	pt3dadd(44.17, 28.51, 5.6, 0.97)
	pt3dadd(47.95, 29.3, 6.47, 0.97)
	pt3dadd(52.87, 30.28, 6.98, 0.97)
	pt3dadd(57.14, 31.94, 7.7, 0.97)
	pt3dadd(61.85, 33.93, 10.38, 0.97)
	pt3dadd(66.12, 34.03, 12.14, 0.97)
	pt3dadd(69.51, 33.2, 13.14, 0.97)
	pt3dadd(72.51, 30.73, 14.25, 0.97)
	pt3dadd(75.43, 29.22, 14.35, 0.97)
	pt3dadd(79.17, 28.06, 14.17, 0.97)
	pt3dadd(83.69, 27.58, 14.8, 0.97)
  }
  dend[32] {pt3dclear()
	pt3dadd(83.69, 27.58, 14.8, 0.97)
	pt3dadd(85.62, 29.82, 15.24, 0.85)
	pt3dadd(88.4, 31.62, 17.49, 0.85)
	pt3dadd(91.21, 33.44, 17.64, 0.85)
	pt3dadd(92.91, 35.08, 17.09, 0.85)
	pt3dadd(93.78, 35.85, 17.86, 0.85)
	pt3dadd(94.65, 36.45, 18.63, 0.85)
  }
  dend[33] {pt3dclear()
	pt3dadd(83.69, 27.58, 14.8, 0.97)
	pt3dadd(87.81, 26.14, 16.61, 0.85)
	pt3dadd(90, 24.19, 16.94, 0.85)
	pt3dadd(92.03, 21.73, 18.37, 0.85)
  }
  dend[34] {pt3dclear()
	pt3dadd(36.81, 29.18, -0.41, 1.45)
	pt3dadd(39.6, 31.15, 1.84, 1.09)
	pt3dadd(42.87, 30.68, -0.27, 0.97)
	pt3dadd(46.34, 32.86, -1.39, 0.97)
	pt3dadd(49.67, 33.66, -2.47, 0.97)
	pt3dadd(53.97, 34.65, -3.87, 0.97)
	pt3dadd(56.8, 36.31, -4.78, 0.97)
	pt3dadd(59.24, 39.6, -7.67, 0.97)
	pt3dadd(62.79, 43.06, -8.81, 0.97)
	pt3dadd(64.9, 43.94, -9.49, 0.97)
	pt3dadd(67.4, 46.62, -10.29, 0.97)
	pt3dadd(70.15, 47.84, -11.18, 0.97)
	pt3dadd(73.54, 52.68, -13.32, 0.97)
	pt3dadd(76.22, 56.4, -16.28, 0.97)
	pt3dadd(77.92, 60.62, -18.91, 0.97)
	pt3dadd(79.37, 62.18, -19.38, 0.97)
	pt3dadd(84.07, 64.45, -20.9, 0.97)
	pt3dadd(87.18, 66.21, -24.01, 0.97)
	pt3dadd(92.52, 67.11, -24.69, 0.97)
	pt3dadd(97.86, 68.02, -24.32, 0.97)
	pt3dadd(102.4, 68.58, -25.8, 0.97)
	pt3dadd(107.35, 68.37, -26.36, 0.97)
	pt3dadd(110.9, 69.08, -26.46, 0.97)
	pt3dadd(115.63, 71.59, -24.84, 0.97)
	pt3dadd(119.39, 71.51, -21.86, 0.97)
	pt3dadd(122.73, 73.57, -18.73, 0.97)
	pt3dadd(125.84, 75.04, -16.58, 0.97)
	pt3dadd(128.77, 77.52, -13.31, 0.97)
	pt3dadd(131.94, 78.02, -9.08, 0.97)
	pt3dadd(135.45, 79.41, -7.07, 0.97)
	pt3dadd(138.5, 80.11, -5.96, 0.97)
	pt3dadd(142.43, 82.27, -4.07, 0.97)
	pt3dadd(144.34, 83.64, -2.58, 0.97)
	pt3dadd(147.08, 84.69, -2.42, 0.97)
	pt3dadd(149.23, 86.15, -1.01, 0.97)
  }
  apic {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(-11.78, 9.54, 7.96, 8.1)
	pt3dadd(-17.62, 7.72, 4.6, 1.81)
	pt3dadd(-20.24, 6.09, 2.29, 1.81)
	pt3dadd(-23.19, 2.91, 1.13, 1.81)
	pt3dadd(-25.65, 1.45, -1.22, 1.81)
	pt3dadd(-27.56, 0.42, -2.7, 1.81)
	pt3dadd(-30.31, 1.6, -3.91, 1.81)
	pt3dadd(-32.16, 2.71, -5.4, 1.81)
  }
  apic[1] {pt3dclear()
	pt3dadd(-32.16, 2.71, -5.4, 1.81)
	pt3dadd(-35.69, 1.63, -9.86, 1.45)
  }
  apic[2] {pt3dclear()
	pt3dadd(-35.69, 1.63, -9.86, 1.45)
	pt3dadd(-37.46, 1.1, -12.1, 1.45)
	pt3dadd(-38.66, 1.35, -13.81, 1.45)
	pt3dadd(-40.75, 3.58, -16.27, 1.45)
	pt3dadd(-42.02, 5.98, -19, 1.45)
	pt3dadd(-43.32, 9.23, -20.67, 1.45)
	pt3dadd(-42.57, 11.05, -23.01, 1.45)
	pt3dadd(-41.67, 13.39, -25.39, 1.45)
	pt3dadd(-42.01, 13.5, -29.49, 1.45)
	pt3dadd(-42.28, 12.66, -32.56, 1.45)
	pt3dadd(-40.96, 13.73, -35.09, 1.45)
	pt3dadd(-41.92, 15.44, -36.87, 1.45)
	pt3dadd(-44.73, 17.05, -39.1, 1.45)
	pt3dadd(-46.5, 20.13, -41.67, 1.45)
  }
  apic[3] {pt3dclear()
	pt3dadd(-46.5, 20.13, -41.67, 1.45)
	pt3dadd(-44.97, 24.01, -43.2, 0.85)
	pt3dadd(-42.82, 29.59, -43.87, 0.85)
	pt3dadd(-41.63, 34.15, -45.29, 0.85)
	pt3dadd(-42.09, 35.87, -48.29, 0.85)
	pt3dadd(-41.15, 36.85, -51.74, 0.85)
	pt3dadd(-39.43, 40.74, -55.44, 0.85)
	pt3dadd(-40.19, 46.12, -56.22, 0.85)
	pt3dadd(-39.66, 52.73, -57.42, 0.85)
	pt3dadd(-38.01, 58.82, -57.93, 0.85)
	pt3dadd(-36.56, 61.56, -58.38, 0.85)
	pt3dadd(-35.66, 69.44, -58.64, 0.85)
	pt3dadd(-36.52, 75.25, -58.33, 0.85)
	pt3dadd(-37.97, 81.47, -56.78, 0.85)
	pt3dadd(-38.21, 86.93, -54.57, 0.85)
	pt3dadd(-39.54, 89.3, -54.13, 0.85)
	pt3dadd(-41.37, 94.25, -53.51, 0.85)
	pt3dadd(-42.31, 98.93, -52.13, 0.85)
	pt3dadd(-42.5, 101.49, -52.06, 0.85)
  }
  apic[4] {pt3dclear()
	pt3dadd(-46.5, 20.13, -41.67, 1.45)
	pt3dadd(-50.49, 21.33, -45.62, 1.21)
	pt3dadd(-51.91, 19.8, -48.32, 1.21)
	pt3dadd(-54.11, 17.92, -50.77, 1.21)
  }
  apic[5] {pt3dclear()
	pt3dadd(-54.11, 17.92, -50.77, 1.21)
	pt3dadd(-54.92, 16.03, -50.51, 0.85)
	pt3dadd(-56.39, 14.24, -53.2, 0.85)
	pt3dadd(-59.34, 13.3, -56.45, 0.85)
	pt3dadd(-61.91, 13.8, -57.71, 0.85)
	pt3dadd(-65.59, 14.65, -60.71, 0.85)
	pt3dadd(-67.9, 13.7, -63.12, 0.85)
	pt3dadd(-69.56, 12.08, -64.69, 0.85)
  }
  apic[6] {pt3dclear()
	pt3dadd(-54.11, 17.92, -50.77, 1.21)
	pt3dadd(-53.28, 17.25, -52.09, 0.97)
	pt3dadd(-53.31, 16.5, -55.24, 0.97)
	pt3dadd(-53.51, 16.1, -58.33, 0.97)
	pt3dadd(-54.18, 14.83, -61.28, 0.97)
	pt3dadd(-54.37, 13.57, -64.38, 0.97)
	pt3dadd(-55.3, 14.78, -67.22, 0.97)
	pt3dadd(-56.38, 12.91, -70.04, 0.97)
	pt3dadd(-57.01, 12.05, -70.89, 0.97)
  }
  apic[7] {pt3dclear()
	pt3dadd(-35.69, 1.63, -9.86, 1.45)
	pt3dadd(-32.21, 6.81, -4.32, 0.97)
	pt3dadd(-33.67, 10.23, -5.93, 0.97)
	pt3dadd(-33.32, 12.83, -9.18, 0.97)
	pt3dadd(-32.07, 18.82, -9.56, 0.97)
	pt3dadd(-31.46, 23.79, -9.74, 0.97)
	pt3dadd(-31.88, 25.24, -9.59, 0.97)
	pt3dadd(-32.78, 25.83, -9.3, 0.97)
	pt3dadd(-35.17, 28.63, -8.51, 0.97)
	pt3dadd(-38.2, 31.75, -7.51, 0.97)
	pt3dadd(-40.72, 34.39, -7.72, 0.97)
	pt3dadd(-44.36, 35.47, -8.64, 0.97)
	pt3dadd(-49.73, 37.48, -7.93, 0.97)
	pt3dadd(-51.35, 39.01, -8.44, 0.97)
	pt3dadd(-54.39, 44.37, -8.48, 0.97)
	pt3dadd(-54.73, 45.73, -8.37, 0.97)
	pt3dadd(-56.87, 48.79, -7.65, 0.97)
	pt3dadd(-56.98, 52.63, -7.6, 0.97)
	pt3dadd(-58.23, 56.47, -7.17, 0.97)
	pt3dadd(-60.82, 58.68, -8.42, 0.97)
	pt3dadd(-63.33, 62.18, -10.75, 0.97)
	pt3dadd(-66.58, 64.04, -10.73, 0.97)
	pt3dadd(-67.73, 65.39, -10.35, 0.97)
	pt3dadd(-69.14, 69.91, -10.92, 0.97)
	pt3dadd(-71.66, 72.04, -11.14, 0.97)
	pt3dadd(-75.38, 73.55, -12.02, 0.97)
	pt3dadd(-80.06, 73.18, -12.6, 0.97)
	pt3dadd(-82.64, 72.08, -18.08, 0.97)
	pt3dadd(-83.97, 70.81, -20.81, 0.97)
	pt3dadd(-85.63, 70.72, -23.42, 0.97)
	pt3dadd(-87.54, 71.24, -25.95, 0.97)
	pt3dadd(-90.43, 71.75, -28.17, 0.97)
	pt3dadd(-93.9, 73.01, -29.13, 0.97)
	pt3dadd(-96.75, 75.13, -29.24, 0.97)
	pt3dadd(-98.06, 75.79, -28.81, 0.97)
	pt3dadd(-99.61, 77.05, -28.3, 0.97)
	pt3dadd(-101.67, 79.51, -27.62, 0.97)
	pt3dadd(-104.86, 82.47, -26.57, 0.97)
	pt3dadd(-108.03, 83.04, -25.53, 0.97)
	pt3dadd(-111.04, 84.47, -25.6, 0.97)
	pt3dadd(-114.13, 88.21, -26.68, 0.97)
	pt3dadd(-116.55, 91.63, -29.03, 0.97)
	pt3dadd(-118.01, 93.85, -30.64, 0.97)
	pt3dadd(-120.14, 98.45, -30.98, 0.97)
	pt3dadd(-121.95, 100.65, -30.38, 0.97)
	pt3dadd(-123.67, 102.43, -29.81, 0.97)
	pt3dadd(-125.63, 102.42, -29.17, 0.97)
	pt3dadd(-126.45, 103.6, -28.9, 0.97)
	pt3dadd(-127.6, 106.17, -29.57, 0.97)
	pt3dadd(-130.29, 107.93, -28.68, 0.97)
	pt3dadd(-131.77, 109.63, -28.19, 0.97)
	pt3dadd(-133.81, 110.37, -27.52, 0.97)
	pt3dadd(-135.37, 113.7, -28.05, 0.97)
	pt3dadd(-137.62, 114.2, -29.42, 0.73)
	pt3dadd(-140.6, 115.13, -30.55, 0.73)
	pt3dadd(-143.05, 117.51, -30.79, 0.73)
	pt3dadd(-144.93, 119.62, -30.17, 0.73)
  }
}
proc shape3d_4() {
  apic[7] {	pt3dadd(-146.4, 119.78, -29.69, 0.73)
	pt3dadd(-151.04, 117.54, -32.39, 0.73)
	pt3dadd(-154.2, 116.51, -36.63, 0.73)
	pt3dadd(-156.64, 117.18, -36.88, 0.73)
	pt3dadd(-159.65, 120.32, -36.94, 0.73)
	pt3dadd(-160.98, 123.2, -36.49, 0.73)
	pt3dadd(-163.27, 125.92, -35.73, 0.73)
  }
  apic[8] {pt3dclear()
	pt3dadd(-32.16, 2.71, -5.4, 1.81)
	pt3dadd(-34.89, 1.15, -5.57, 1.21)
	pt3dadd(-37.62, -1.25, -5.75, 1.21)
	pt3dadd(-39.62, -3.07, -6.15, 1.21)
	pt3dadd(-42.26, -3.16, -8.45, 1.21)
	pt3dadd(-45.33, -2.66, -9.55, 1.21)
	pt3dadd(-48.61, -2.24, -11.64, 1.21)
	pt3dadd(-51.67, -0.37, -13.78, 1.21)
	pt3dadd(-54.23, -0.2, -16.1, 1.21)
	pt3dadd(-57.76, 0.11, -18.11, 1.21)
	pt3dadd(-62.61, 1.45, -19.68, 1.21)
	pt3dadd(-67.6, 0.9, -21.21, 1.21)
	pt3dadd(-70, -0.29, -22.54, 1.21)
	pt3dadd(-74.73, -1.77, -24.16, 1.21)
	pt3dadd(-78.75, -4.02, -24.96, 1.21)
	pt3dadd(-84.7, -6.11, -26.19, 1.21)
	pt3dadd(-88.15, -7.94, -27.18, 1.21)
	pt3dadd(-93.72, -9.78, -27.48, 1.21)
	pt3dadd(-96.13, -10.31, -27.74, 1.21)
	pt3dadd(-100.85, -9.67, -27.26, 1.21)
	pt3dadd(-104.95, -14.07, -25.94, 1.21)
	pt3dadd(-109.37, -18.65, -25.57, 1.21)
	pt3dadd(-115.11, -21.52, -24.77, 1.21)
	pt3dadd(-121.14, -25.25, -24.92, 1.21)
	pt3dadd(-125.33, -27.85, -24.62, 0.73)
	pt3dadd(-131.84, -31.92, -25.68, 0.73)
	pt3dadd(-136.2, -33.33, -25.32, 0.73)
	pt3dadd(-139.99, -35.16, -25.14, 0.73)
	pt3dadd(-142.99, -36.31, -24.17, 0.73)
	pt3dadd(-145.97, -38.12, -24.26, 0.73)
	pt3dadd(-147.59, -38.48, -23.73, 0.73)
  }
  apic[9] {pt3dclear()
	pt3dadd(-11.78, 9.54, 7.96, 8.1)
	pt3dadd(-14.47, 14.63, 12.02, 6.05)
	pt3dadd(-16.32, 16.98, 15.79, 6.05)
	pt3dadd(-18.03, 18.97, 20.56, 6.05)
	pt3dadd(-20.61, 20.89, 24.57, 6.05)
	pt3dadd(-21.72, 22.31, 28.09, 6.05)
  }
  apic[10] {pt3dclear()
	pt3dadd(-21.72, 22.31, 28.09, 6.05)
	pt3dadd(-25.36, 19.28, 29.26, 1.33)
	pt3dadd(-27.15, 17.71, 30.89, 1.33)
	pt3dadd(-28.86, 15.89, 32.49, 1.33)
	pt3dadd(-28.3, 13.74, 34.4, 1.33)
	pt3dadd(-27.79, 11.36, 34.22, 1.33)
	pt3dadd(-29.36, 10.9, 35.78, 1.33)
	pt3dadd(-30.54, 11.03, 39.32, 1.33)
	pt3dadd(-32.37, 10.3, 43.07, 1.33)
	pt3dadd(-34.27, 10.19, 45.79, 1.33)
	pt3dadd(-35.87, 11.77, 49.48, 1.33)
	pt3dadd(-36.89, 11.56, 52.96, 1.33)
	pt3dadd(-38.22, 9.81, 56.54, 1.33)
	pt3dadd(-38.26, 8.76, 59.71, 1.33)
	pt3dadd(-38.21, 8.15, 61.79, 1.33)
  }
  apic[11] {pt3dclear()
	pt3dadd(-21.72, 22.31, 28.09, 6.05)
	pt3dadd(-24.86, 27.92, 29.14, 4.72)
  }
  apic[12] {pt3dclear()
	pt3dadd(-24.86, 27.92, 29.14, 4.72)
	pt3dadd(-24, 32.04, 39.39, 1.69)
	pt3dadd(-23.92, 34.92, 43.59, 1.69)
	pt3dadd(-23.82, 35.57, 47.77, 1.69)
	pt3dadd(-22.8, 35.65, 49.54, 1.33)
	pt3dadd(-20.34, 34.71, 52.94, 1.33)
	pt3dadd(-18.63, 33.6, 53.43, 1.33)
	pt3dadd(-17.43, 33.36, 54.09, 1.33)
  }
  apic[13] {pt3dclear()
	pt3dadd(-24.86, 27.92, 29.14, 4.72)
	pt3dadd(-27.11, 33.46, 29.9, 3.51)
	pt3dadd(-28.21, 40.71, 29.24, 2.42)
	pt3dadd(-28.09, 46.88, 28.17, 2.42)
	pt3dadd(-26.57, 52.3, 26.65, 2.42)
	pt3dadd(-26.26, 55.38, 25.51, 1.81)
	pt3dadd(-25.84, 57.38, 23.28, 1.69)
	pt3dadd(-23.63, 58.35, 21.52, 1.21)
	pt3dadd(-21.28, 59.65, 20.76, 1.21)
	pt3dadd(-18.83, 60.03, 18.91, 1.21)
	pt3dadd(-17.29, 62.2, 17.37, 1.21)
	pt3dadd(-15.43, 64.53, 15.72, 1.33)
	pt3dadd(-14.27, 66.61, 13.25, 1.33)
	pt3dadd(-15.5, 68.91, 12.61, 1.33)
	pt3dadd(-16.31, 71.48, 11.83, 1.57)
	pt3dadd(-17.15, 73.69, 12.12, 1.57)
  }
  apic[14] {pt3dclear()
	pt3dadd(-17.15, 73.69, 12.12, 1.57)
	pt3dadd(-19.52, 76.16, 11.85, 0.85)
	pt3dadd(-21.44, 78.72, 9.33, 0.85)
	pt3dadd(-22.72, 80.44, 7.65, 0.85)
	pt3dadd(-25.38, 82.23, 5.37, 0.85)
	pt3dadd(-27.8, 84.27, 4.07, 0.85)
	pt3dadd(-32.41, 85, 3.47, 0.85)
	pt3dadd(-34.59, 86.45, 2.08, 0.85)
	pt3dadd(-37.7, 87.73, -1.09, 0.85)
	pt3dadd(-41.27, 87.99, -6.24, 0.85)
	pt3dadd(-43.74, 88.76, -9.64, 0.85)
	pt3dadd(-47.35, 90.05, -12.66, 0.85)
	pt3dadd(-49.01, 92.03, -16.32, 0.85)
	pt3dadd(-50.47, 93.17, -22.15, 0.85)
	pt3dadd(-52.58, 93.1, -27.78, 0.85)
	pt3dadd(-54.81, 92.93, -30.21, 0.85)
	pt3dadd(-58.09, 92.83, -32.29, 0.85)
	pt3dadd(-60.74, 94.79, -34.57, 0.85)
	pt3dadd(-61.87, 99.43, -37.34, 0.85)
	pt3dadd(-63.98, 99.36, -42.96, 0.73)
	pt3dadd(-65.84, 99.39, -48.67, 0.73)
	pt3dadd(-67.96, 99.14, -52.18, 0.73)
	pt3dadd(-70.53, 99.99, -54.5, 0.73)
	pt3dadd(-74.27, 102.69, -54.32, 0.73)
	pt3dadd(-76.87, 103.19, -54.52, 0.73)
	pt3dadd(-79.98, 106.06, -53.5, 0.73)
  }
  apic[15] {pt3dclear()
	pt3dadd(-17.15, 73.69, 12.12, 1.57)
	pt3dadd(-15.76, 80.71, 12.75, 1.45)
	pt3dadd(-14.77, 86.1, 13.5, 1.45)
	pt3dadd(-14.17, 90.89, 14.38, 1.69)
	pt3dadd(-12.87, 96.79, 16.09, 1.69)
	pt3dadd(-12.12, 99.69, 17.96, 1.69)
	pt3dadd(-9.27, 106.38, 19.17, 1.69)
	pt3dadd(-8.07, 108.36, 18.79, 1.69)
	pt3dadd(-6.01, 115.74, 17.1, 1.69)
	pt3dadd(-5.08, 117.4, 13.65, 1.69)
	pt3dadd(-1.66, 120.53, 10.44, 1.33)
	pt3dadd(0.39, 123.06, 6.63, 1.33)
	pt3dadd(2.75, 126.1, 3.77, 1.33)
	pt3dadd(4.93, 131.18, 0.98, 1.69)
	pt3dadd(6.55, 136.17, -1.62, 1.69)
	pt3dadd(9.19, 142.79, -2.44, 1.69)
	pt3dadd(9.26, 146.31, -4.56, 1.69)
	pt3dadd(10.56, 150.96, -7.06, 1.45)
	pt3dadd(10.22, 155.06, -7.98, 1.45)
	pt3dadd(8.58, 157.27, -8.49, 1.45)
	pt3dadd(7.28, 161.04, -10.15, 1.45)
	pt3dadd(5.13, 166.67, -10.48, 1.45)
	pt3dadd(3.82, 172.32, -12.13, 1.45)
	pt3dadd(3.65, 176.6, -14.15, 1.45)
	pt3dadd(2.94, 180.3, -17.06, 1.45)
	pt3dadd(2.22, 182.97, -19.97, 1.45)
	pt3dadd(1.12, 186.23, -23.8, 1.45)
  }
  apic[16] {pt3dclear()
	pt3dadd(1.12, 186.23, -23.8, 1.45)
	pt3dadd(2.45, 186.77, -26.34, 1.09)
	pt3dadd(3.78, 188.7, -29.92, 1.09)
	pt3dadd(4.05, 190.51, -33.15, 1.09)
	pt3dadd(3.57, 194.82, -36.13, 1.09)
	pt3dadd(2.29, 198.76, -38.85, 1.09)
	pt3dadd(2.06, 202.63, -41.91, 1.09)
	pt3dadd(4.94, 210.88, -44.92, 1.09)
	pt3dadd(7.84, 216.91, -46.88, 1.09)
	pt3dadd(9.61, 218.64, -47.45, 1.09)
	pt3dadd(12.27, 221.49, -48.3, 1.09)
	pt3dadd(14.66, 224.59, -48.02, 0.85)
	pt3dadd(15.37, 225.87, -47.19, 0.85)
  }
  apic[17] {pt3dclear()
	pt3dadd(1.12, 186.23, -23.8, 1.45)
	pt3dadd(-0.78, 188.13, -27.38, 1.45)
	pt3dadd(-3.04, 190.68, -28.73, 1.45)
	pt3dadd(-3.95, 193.67, -29.47, 1.45)
	pt3dadd(-5.35, 194.94, -29.01, 1.45)
	pt3dadd(-7.46, 195.95, -28.32, 1.21)
	pt3dadd(-8.77, 200.06, -29.98, 1.21)
	pt3dadd(-10.97, 204.57, -31.34, 1.21)
	pt3dadd(-11.94, 207.83, -33.12, 1.21)
  }
  apic[18] {pt3dclear()
	pt3dadd(-11.94, 207.83, -33.12, 1.21)
	pt3dadd(-14.51, 210.92, -36.47, 1.09)
	pt3dadd(-14.03, 215.56, -38.71, 1.09)
	pt3dadd(-14.99, 218.3, -41.54, 1.09)
	pt3dadd(-16.52, 221.46, -43.13, 1.09)
	pt3dadd(-17.89, 225.5, -45.82, 1.09)
	pt3dadd(-18.45, 229.36, -48.77, 1.09)
	pt3dadd(-20.72, 233.46, -51.17, 1.09)
	pt3dadd(-21.61, 238.17, -52.96, 1.09)
	pt3dadd(-23.16, 243.05, -55.59, 1.09)
	pt3dadd(-23.55, 246.41, -58.6, 1.09)
	pt3dadd(-22.33, 249.6, -61.09, 1.09)
	pt3dadd(-23.03, 252.27, -64, 1.09)
	pt3dadd(-24.01, 258.77, -66.81, 1.09)
	pt3dadd(-24.66, 263.41, -69.73, 1.09)
	pt3dadd(-24.95, 266.52, -73.83, 1.09)
	pt3dadd(-26.29, 267.12, -76.54, 0.85)
  }
  apic[19] {pt3dclear()
	pt3dadd(-11.94, 207.83, -33.12, 1.21)
	pt3dadd(-10.64, 215.45, -32.45, 1.21)
	pt3dadd(-9.3, 218.79, -31.82, 1.21)
	pt3dadd(-8.09, 222.88, -29.04, 1.21)
	pt3dadd(-6.04, 226.3, -26.54, 1.21)
	pt3dadd(-6.1, 229.36, -24.4, 1.21)
	pt3dadd(-6.22, 232.52, -23.29, 1.21)
	pt3dadd(-6.14, 237.46, -21.2, 0.97)
	pt3dadd(-6.47, 246.27, -19.99, 0.97)
	pt3dadd(-5.78, 251.15, -20.2, 0.97)
	pt3dadd(-5.73, 255.34, -20.19, 0.97)
	pt3dadd(-4.56, 259.88, -20.55, 0.97)
	pt3dadd(-3.4, 262.52, -17.76, 0.97)
	pt3dadd(-3.3, 267.13, -16.72, 0.97)
	pt3dadd(-3.98, 269.35, -15.44, 0.97)
	pt3dadd(-3.44, 273.02, -15.6, 0.97)
	pt3dadd(-2.98, 276.11, -15.73, 0.97)
	pt3dadd(-3.45, 281.99, -14.5, 0.97)
	pt3dadd(-4.62, 286.09, -14.1, 0.97)
	pt3dadd(-5.62, 289.15, -13.76, 0.97)
	pt3dadd(-5.75, 293.35, -13.7, 0.97)
	pt3dadd(-6.28, 297.96, -13.5, 0.97)
	pt3dadd(-7.6, 301.71, -13.06, 0.97)
  }
}
proc shape3d_5() {
  apic[19] {	pt3dadd(-7.27, 306.57, -11.04, 0.97)
	pt3dadd(-8.78, 309.96, -9.48, 0.97)
	pt3dadd(-8, 312.53, -8.67, 0.97)
	pt3dadd(-8.76, 315.51, -8.41, 0.97)
	pt3dadd(-10.44, 318.39, -5.74, 0.97)
	pt3dadd(-11.95, 322.12, -4.18, 0.97)
	pt3dadd(-12.62, 324.68, -3.95, 0.97)
	pt3dadd(-13.38, 326.99, -3.69, 0.97)
	pt3dadd(-14.77, 329.28, -3.23, 0.97)
	pt3dadd(-15.3, 333.03, -3.04, 0.97)
	pt3dadd(-14.23, 337.65, -1.26, 0.97)
	pt3dadd(-13.33, 344.66, -0.47, 0.97)
	pt3dadd(-14.42, 348.34, -0.1, 0.97)
	pt3dadd(-13.7, 350.47, -0.32, 0.97)
	pt3dadd(-14.55, 354.74, -0.02, 0.97)
  }
  apic[20] {pt3dclear()
	pt3dadd(-14.55, 354.74, -0.02, 0.97)
	pt3dadd(-15.3, 359.28, -0.81, 0.85)
	pt3dadd(-14.79, 364.84, -0.95, 0.85)
	pt3dadd(-14.4, 367.5, -1.07, 0.85)
	pt3dadd(-15.8, 369.28, -0.6, 0.85)
	pt3dadd(-16.31, 372.34, -0.42, 0.85)
	pt3dadd(-16.26, 376.55, -0.42, 0.85)
	pt3dadd(-15.87, 379.03, -1.58, 0.85)
	pt3dadd(-15.83, 384.24, -1.57, 0.85)
	pt3dadd(-13.02, 388.81, -2.47, 0.85)
	pt3dadd(-11.17, 389.43, -2.01, 0.85)
	pt3dadd(-9.29, 392.67, 0.53, 0.85)
	pt3dadd(-7.69, 395.77, 0.03, 0.85)
	pt3dadd(-6.2, 401, -0.43, 0.85)
	pt3dadd(-6.2, 403.4, -1.47, 0.85)
	pt3dadd(-5.8, 408.3, -3.67, 0.85)
	pt3dadd(-5.95, 415.9, -3.59, 0.85)
	pt3dadd(-5.32, 420.71, -4.82, 0.85)
	pt3dadd(-4.64, 423.18, -2.93, 0.85)
	pt3dadd(-6.02, 428.11, -0.36, 0.85)
	pt3dadd(-10.17, 429.35, 0.99, 0.85)
  }
  apic[21] {pt3dclear()
	pt3dadd(-14.55, 354.74, -0.02, 0.97)
	pt3dadd(-16.84, 356.6, 0.72, 0.97)
	pt3dadd(-17.59, 358.73, 0.98, 0.97)
	pt3dadd(-18.27, 361.29, 1.21, 0.97)
	pt3dadd(-18.85, 363.76, 1.41, 0.97)
	pt3dadd(-22.27, 365.61, 1.48, 0.97)
	pt3dadd(-24.9, 367.8, 3.4, 0.97)
	pt3dadd(-25.91, 370.18, 3.74, 0.97)
	pt3dadd(-27.32, 373.33, 4.21, 0.97)
	pt3dadd(-29.61, 375.53, 4.97, 0.97)
	pt3dadd(-31.17, 377.31, 5.49, 0.97)
	pt3dadd(-32.83, 380.88, 6.04, 0.97)
	pt3dadd(-32.92, 382.68, 6.08, 0.97)
	pt3dadd(-34.17, 386.35, 6.51, 0.97)
	pt3dadd(-34.77, 389.33, 6.71, 0.97)
	pt3dadd(-35.94, 393.07, 7.11, 0.97)
	pt3dadd(-37.09, 396.84, 6.46, 0.97)
	pt3dadd(-38.81, 400.17, 5.98, 0.97)
	pt3dadd(-40.45, 403.57, 5.48, 0.97)
	pt3dadd(-44.41, 410.71, 6.8, 0.97)
	pt3dadd(-45.98, 416.27, 5.23, 0.97)
	pt3dadd(-45.91, 419.61, 4.18, 0.97)
	pt3dadd(-45.32, 427.15, 4.02, 0.97)
	pt3dadd(-45.85, 431.93, 4.21, 0.97)
	pt3dadd(-47.35, 433.95, 5.76, 0.97)
	pt3dadd(-49.83, 436.48, 8.69, 0.97)
	pt3dadd(-51.02, 439.02, 10.14, 0.73)
	pt3dadd(-52.46, 443.01, 12.73, 0.73)
	pt3dadd(-52.51, 446.76, 13.82, 0.73)
	pt3dadd(-52.23, 449.49, 15.84, 0.73)
  }
}
proc basic_shape() {
  shape3d_1()
  shape3d_2()
  shape3d_3()
  shape3d_4()
  shape3d_5()
}

proc size_sections() {
  
    basic_shape()
/*
	for i=0,9{
		axon[i] {pt3dclear()
			pt3dadd(-5*i, 0, 0, 1.0) 
			pt3dadd(-2.5*(i+1), 0, 0, 1.0) 
			pt3dadd(-5*(i+1), 0, 0, 1.0)
		}
	}
	axon[10]{pt3dclear()
		pt3dadd(-50, 0, 0, 1.0) 
		pt3dadd(-100, 0, 0, 1.0) 
		pt3dadd(-150, 0, 0, 1.0)
	}
*/

}
/*

objref all, dendrite_list, apical_list, soma_list, axon_list
proc append_sections() { local i
	objref all, dendrite_list, apical_list, soma_list, axon_list

	all = new SectionList()
	soma_list = new SectionList()
	axon_list = new SectionList()
	dendrite_list = new SectionList()
	apical_list = new SectionList()

	soma[0] all.append()
	soma[0] soma_list.append()
	
	for i=0,34{
		dend[i] all.append()
		dend[i] dendrite_list.append()
	}

	for i=0,21{
		apic[i] all.append()
		apic[i] apical_list.append()
	}
	
	for i=0,10{
		axon[i] all.append()
	}
	
	axon[9] axon_list.append() //Only append AIS segment to receive synapses
}


external lambda_f
proc set_nseg() {
  	forsec all { nseg = int((L/(0.1*lambda_f(100))+.9)/2)*2 + 1  }
}
*/

proc mechinit() {

	// resting membrane potential. Must lie between Na+ and K+ reversal potentials
	Vrest=-80
	
	// Temperature of simulation
	celsius = 34.0

	// Membrane resistance in ohm*cm2
	RmDend = 40000 //1/0.00018
	RmSoma = 21000 //1/0.00018
	RmAx = 1000
	
	// Membrane capacitance in uF/cm2
	CmSoma= 1.5
	CmDend = 1.5

	// Axial resistance in ohm*cm
	RaDend= 150
	RaSoma= 150	
	RaAx = 150
	
	// Calcium concentrations in mM
	ca_outside = 2
	ca_inside = 5.e-6 // 50.e-6
	catau = 10

	// reversal potentials in mV
	ekval = -90
	enaval = 45
	eHCNval = -30
	ecaval = 8.314*(273.15+celsius)/(2*9.649e4)*log(ca_outside/ca_inside)*1000 // about 170, otherwise set to 130
	
	if (Vrest<ekval) Vrest=ekval // Cell cannot rest lower than K+ reversal potential
	if (Vrest>enaval) Vrest=enaval // Cell cannot rest higher than Na+ reversal potential
	eleakval = Vrest

	// max ion channel conductances in mho/cm2
	gna = 0.015
	gnap = 0.000559//0.000559 // 0.000551 
	gkdr = 0.002//0.002 
	ghd = 1.5e-5//1.5e-5
	gca = 5.5e-4 
	gm = 0.00224 // 0.00222  
	gsAHP = 0.05//0.0019
	gkap = 0.002 
			
	nash=10

	// axon channels
	gna12_ais_max = 0//3000   // Nav1.2 
	gna16_ais_max = 0//3200   // Nav1.6
	gkv_axon = 0//1000
	nash=10
	
	tha_na16 = -43
	tha_na12 = -30
	
}

proc insert_mechs() {
 

	soma[0]{
		Ra = RaSoma
		cm=CmSoma
		insert pas e_pas = -72 g_pas = 1/RmSoma
		
		insert cadyn gcabar_cadyn = gca  eca = 120
		insert hd ghdbar_hd = ghd 
		insert na3 sh_na3=nash ar_na3=1	gbar_na3 = 3*gna
		insert nap gbar_nap = gnap
		insert kdr gbar_kdr = gkdr
		insert capool taucas = 1000  fcas_capool = 0.05 //only in dend and p_dend
		insert sAHP gsAHPbar_sAHP = gsAHP
		insert im gbar_im = gm
		insert kap gkabar_kap = gkap
		
	} 

	for i=0,34{
		dend[i] {
			Ra = RaDend
			cm = CmDend
			insert pas e_pas = -72 g_pas = 1/RmDend
			
			insert cadyn gcabar_cadyn = gca eca = 120
			insert hd ghdbar_hd = ghd 
			insert na3 sh_na3=nash ar_na3=1	gbar_na3 = gna
			insert nap gbar_nap = 0  gbar_nap(1/(2*nseg)) = 0.8*gnap
			insert kdr gbar_kdr = gkdr
			insert capool taucas = 1000  fcas_capool = 0.05 
			insert sAHP gsAHPbar_sAHP = 0
			insert im gbar_im = 0 gbar_im(1/(2*nseg)) = 0.8*gm
			insert kap gkabar_kap = 0
			
		}	
	}

    for i=0,21{
		apic[i] {
			Ra = RaDend
			cm = CmDend
			insert pas e_pas = -72 g_pas = 1/RmDend
			
			insert cadyn gcabar_cadyn = gca eca = 120
			insert hd ghdbar_hd = ghd 
			insert na3 sh_na3=nash ar_na3=1	gbar_na3 = gna
			insert nap gbar_nap = 0  gbar_nap(1/(2*nseg)) = 0.8*gnap
			insert kdr gbar_kdr = gkdr
			insert capool taucas = 1000  fcas_capool = 0.05 
			insert sAHP gsAHPbar_sAHP = 0
			insert im gbar_im = 0 gbar_im(1/(2*nseg)) = 0.8*gm
			insert kap gkabar_kap = 0
			
		}	
	}	
/*
	for i=0,9 axon[i] {
		insert pas
		Ra = RaAx//50000
		cm = 0.8 
		g_pas = 1/(RmAx+200)
		e_pas = -70
		insert na12  //gbar_na12=0
		insert na16  //gbar_na16=0
		insert kv    //gbar_kv = 0
		ena = 45
		ek = -90
	}
	axon[10]{
		insert pas
		Ra = RaAx
		cm = 0.2 //myelin 
		g_pas = 1/RmAx
		e_pas = -70
		insert na12  
		insert na16  
		insert kv    
		ena = 45
		ek = -90
	}
	
	axon[0]. gbar_na12= gna12_ais_max      *	0.96	*	1             								
	axon[1]. gbar_na12= gna12_ais_max  		*	0.9	*	1                      
	axon[2]. gbar_na12= gna12_ais_max  		*	0.75	*	1                    
	axon[3]. gbar_na12= gna12_ais_max  		*	0.55	*	0.95              
	axon[4]. gbar_na12= gna12_ais_max  		*	0.366985879	*	0.880142857  
	axon[5]. gbar_na12= gna12_ais_max  		*	0.2	*	0.75                 
	axon[6]. gbar_na12= gna12_ais_max  		*	0.100330761	*	0.647857143  
	axon[7]. gbar_na12= gna12_ais_max  		*	0.011532125	*	0.520285714 
	axon[8]. gbar_na12= gna12_ais_max  		*	0	*	0.428571429            
	axon[9]. gbar_na12= gna12_ais_max  		*	0	*	0.342857143 
	axon[10]. gbar_na12= gna12_ais_max  		*	0	*	0.342857143 
		
	axon[0]. gbar_na16 = gna16_ais_max	*	0.04	*	1   
	axon[1]. gbar_na16 = gna16_ais_max	*	0.1	*	1   
	axon[2]. gbar_na16 = gna16_ais_max	*	0.25	*	1   
	axon[3]. gbar_na16 = gna16_ais_max	*	0.45	*	0.95   
	axon[4]. gbar_na16 = gna16_ais_max	*	0.633014121	*	0.880142857   
	axon[5]. gbar_na16 = gna16_ais_max	*	0.8	*	0.75   
	axon[6]. gbar_na16 = gna16_ais_max	*	0.899669239	*	0.647857143   
	axon[7]. gbar_na16 = gna16_ais_max	*	0.988467875	*	0.520285714   
	axon[8]. gbar_na16 = gna16_ais_max	*	1	*	0.428571429   
	axon[9]. gbar_na16 = gna16_ais_max	*	1	*	0.342857143  
	axon[10]. gbar_na16 = gna16_ais_max	*	1	*	0.342857143  
				
	axon[0]. gbar_kv = gkv_axon	*	0.2 
	axon[1]. gbar_kv = gkv_axon	*	0.3 
	axon[2]. gbar_kv = gkv_axon	*	0.4 
	axon[3]. gbar_kv = gkv_axon	*	0.5 
	axon[4]. gbar_kv = gkv_axon	*	0.6 
	axon[5]. gbar_kv = gkv_axon	*	0.7 
	axon[6]. gbar_kv = gkv_axon	*	0.8 
	axon[7]. gbar_kv = gkv_axon	*	0.9
	axon[8]. gbar_kv = gkv_axon	*	1
	axon[9]. gbar_kv = gkv_axon	*	1
	axon[10]. gbar_kv = gkv_axon	*	1
	*/
}

init()

/*
proc set_chanparams() {
	forsec all {
		
	}
}


proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	axon[10] $o2 = new NetCon (&v(0.5), $o1)
			$o2.threshold = -10

}

func is_art()  { return 0 }

proc position(){ local i
	forall {
		for i = 0, n3d()-1 {
			pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
		}
	}
	x = $1  y = $2  z = $3	
}

proc get_root() {local i localobj sref
	rootlist = new SectionList()
	rootlist.allroots()
	i=0
	forsec all {
		sref = new SectionRef()
		if (sref.has_parent==0) {
			myroot = secname()
			i=i+1
		}
		for(x,0) {
			if (diam(x) <=0.01) print "WARNING: tiny diameter of ",  diam(x), " um at ", secname(), ", point ", x, "!"
			if (diam3d(x) <=0.01) print "WARNING: tiny 3d diameter of ", diam3d(x), " um at ", secname(), ", point ", x, "!"
		}
		if (L <=0.001) print "WARNING: tiny length of ", L, " um at ", secname(), "!"
	}
	if (i>1) {
		print "WARNING: cell ", gid, " has ", i, " root sections!"
	}
}
strdef myStr

objref newSecRef, syn
proc define_synapses() {
	ind = $1
	i = 0

	access soma[0]
	{distance()}

	for celltype = 0, numCellTypes-1 {
		templist = new List ()
		for r=0, cellType[ind].SynList[celltype].count()-1 {
		
			execute(cellType[ind].SynList[celltype].object(r).NewSynStr, this) // sets newSecRef
						
			forsec newSecRef {		
				for (x,0) {
					// Decides if distance is correct
					execute(cellType[ind].SynList[celltype].object(r).CondStr, this)
					
					 if (y==1) {
						// Declares new synapse
						execute(cellType[ind].SynList[celltype].object(r).SynStr, this)
						if (cellType[ind].SynList[celltype].object(r).GABAabFlag==0) {
							syn.tau1 = cellType[ind].SynList[celltype].object(r).tau1
							syn.tau2 = cellType[ind].SynList[celltype].object(r).tau2
							syn.e = cellType[ind].SynList[celltype].object(r).efirst
							if (strcmp(cellType[ind].SynList[celltype].object(r).SynType,"MyExp2Sidnw")==0) {
								syn.nw = cellType[ind].SynList[celltype].object(r).Scaling
							}
						} else {
							syn.tau1a = cellType[ind].SynList[celltype].object(r).tau1a
							syn.tau2a = cellType[ind].SynList[celltype].object(r).tau2a
							syn.ea = cellType[ind].SynList[celltype].object(r).ea
							syn.tau1b = cellType[ind].SynList[celltype].object(r).tau1b
							syn.tau2b = cellType[ind].SynList[celltype].object(r).tau2b
							syn.eb = cellType[ind].SynList[celltype].object(r).eb
						}
						syn.sid = i
						templist.append(syn)
						i = i + 1
					}
				}
			}
		}
		pre_list.append(templist)
		findme = 1
	}
}
*/
//endtemplate Henckens_Pyr

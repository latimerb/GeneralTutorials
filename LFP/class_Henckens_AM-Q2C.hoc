//begintemplate detailedpyrtypeA

/*
public init, connect_sections, size_sections, append_sections, define_synapses
public mechinit, insert_mechs, set_biophys, get_root
public  pre_list, connect_pre, is_art, is_connected, gid, randi
public soma, dend, axon
public all, soma_list, axon_list, dendrite_list
public x, y, z, position, myroot, myrootsec, Vrest
public NumSoma, NumDend, NumAxon
*/

// strings
strdef myroot, myname

// objects
objref syn, pre_list, templist, rootlist, myrootsec, this

// external variables
//external numCellTypes, cellType

// create the sections
create soma[1], dend[46], apic[37], axon[11]

proc init() {
	//gid = $1
	//randi = $2
	
	// morphology
	connect_sections()	// local fcn: connect soma, dendrites, axon initial segment
	size_sections()		// local fcn: set the size dimensions of each section
	define_shape()		// builtin fcn: fill in 3d info for sections defined by only L and diam, translate 3d points for consistency with their connections 
  	append_sections()	// local fcn: append all sections to the section list
	//set_nseg()			// local fcn: set the number of segments in each section
	//get_root()			// local fcn: perform morphology checks

	// electrophysiology
	mechinit()			// local fcn: set values for max conductances and reversal potentials of ion channels and other ephys parameters that are subject to fitting
	insert_mechs()		// local fcn: insert ion channels and actually set values determined in the mechinit fcn
	//set_chanparams()	// local fcn: after all channels have been inserted, then their other parameters can be set	

	// synapses
	pre_list = new List() // define a list for the presynaptic connections	
	//define_synapses($3)	// local fcn: define all possible synaptic connections received by this cell
}

proc connect_sections() { local i
	connect dend(0), soma[0](0.5)
  for i = 1, 2 connect dend[i](0), dend[i-1](1)
  connect dend[3](0), dend[1](1)
  for i = 4, 5 connect dend[i](0), dend[3](1)
  connect dend[6](0), dend(1)
  for i = 7, 9 connect dend[i](0), dend[i-1](1)
  connect dend[10](0), dend[8](1)
  connect dend[11](0), dend[7](1)
  for i = 12, 13 connect dend[i](0), dend[11](1)
  for i = 14, 15 connect dend[i](0), dend[13](1)
  connect dend[16](0), dend[6](1)
  for i = 17, 18 connect dend[i](0), dend[16](1)
  connect dend[19](0), soma(0.5)
  for i = 20, 21 connect dend[i](0), dend[19](1)
  for i = 22, 23 connect dend[i](0), dend[i-1](1)
  connect dend[24](0), dend[22](1)
  for i = 25, 26 connect dend[i](0), dend[24](1)
  connect dend[27](0), dend[21](1)
  for i = 28, 29 connect dend[i](0), dend[27](1)
  connect dend[30](0), soma(0.5)
  for i = 31, 32 connect dend[i](0), dend[i-1](1)
  connect dend[33](0), dend[31](1)
  for i = 34, 35 connect dend[i](0), dend[33](1)
  connect dend[36](0), dend[30](1)
  for i = 37, 38 connect dend[i](0), dend[i-1](1)
  connect dend[39](0), dend[37](1)
  connect dend[40](0), dend[36](1)
  for i = 41, 42 connect dend[i](0), dend[40](1)
  for i = 43, 44 connect dend[i](0), dend[42](1)
  connect dend[45](0), soma(0.5)
  connect apic(0), soma(0.5)
  for i = 1, 3 connect apic[i](0), apic[i-1](1)
  connect apic[4](0), apic[2](1)
  connect apic[5](0), apic[1](1)
  connect apic[6](0), apic(1)
  for i = 7, 8 connect apic[i](0), apic[i-1](1)
  connect apic[9](0), apic[7](1)
  for i = 10, 11 connect apic[i](0), apic[9](1)
  connect apic[12](0), apic[6](1)
  for i = 13, 14 connect apic[i](0), apic[i-1](1)
  connect apic[15](0), apic[13](1)
  connect apic[16](0), apic[12](1)
  for i = 17, 18 connect apic[i](0), apic[i-1](1)
  connect apic[19](0), apic[17](1)
  for i = 20, 21 connect apic[i](0), apic[19](1)
  for i = 22, 23 connect apic[i](0), apic[21](1)
  for i = 24, 25 connect apic[i](0), apic[23](1)
  for i = 26, 27 connect apic[i](0), apic[25](1)
  for i = 28, 29 connect apic[i](0), apic[27](1)
  connect apic[30](0), apic[16](1)
  for i = 31, 32 connect apic[i](0), apic[30](1)
  for i = 33, 34 connect apic[i](0), apic[i-1](1)
  connect apic[35](0), apic[33](1)
  connect apic[36](0), apic[32](1)
	connect axon(0), soma[0](0.5)
	for i = 1, 10 connect axon[i](0), axon[i-1](1)
}


proc size_sections() {
  proc shape3d_1() {
  soma[0] {pt3dclear()
	pt3dadd(-12.306, 0, 0, 24.612)
	pt3dadd(0, 0, 0, 24.612)
	pt3dadd(12.306, 0, 0, 24.612)
  }
  dend {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(-7.38, -10.16, -0.58, 4.11)
	pt3dadd(-11.41, -11.51, -1.82, 4.11)
	pt3dadd(-17.17, -13.77, -3.14, 3.39)
	pt3dadd(-21.65, -15.53, -4.39, 3.39)
  }
  dend[1] {pt3dclear()
	pt3dadd(-21.65, -15.53, -4.39, 3.39)
	pt3dadd(-26.01, -13.21, 0.13, 1.57)
	pt3dadd(-28.31, -11.13, 1.82, 1.57)
	pt3dadd(-31.48, -10.42, 2.52, 1.57)
	pt3dadd(-33.85, -10.48, 3.34, 1.57)
	pt3dadd(-36.76, -8.77, 4.01, 1.57)
	pt3dadd(-40.96, -7.57, 4.6, 1.57)
  }
  dend[2] {pt3dclear()
	pt3dadd(-40.96, -7.57, 4.6, 1.57)
	pt3dadd(-44.5, -10.42, 5.5, 1.21)
	pt3dadd(-44.59, -12.22, 7.62, 1.21)
	pt3dadd(-44.66, -17.01, 8.93, 1.21)
	pt3dadd(-46.41, -18.9, 8.91, 1.21)
	pt3dadd(-50.35, -22.63, 9.84, 1.21)
	pt3dadd(-54.54, -25.29, 12.69, 1.21)
	pt3dadd(-56.23, -25.13, 15.56, 1.21)
	pt3dadd(-57.8, -25.52, 17.47, 1.21)
	pt3dadd(-59.26, -24, 20.27, 1.21)
	pt3dadd(-61.13, -23.26, 23.09, 1.21)
	pt3dadd(-64.31, -21.55, 25.74, 1.21)
	pt3dadd(-65.2, -20.17, 27.59, 1.21)
  }
  dend[3] {pt3dclear()
	pt3dadd(-40.96, -7.57, 4.6, 1.57)
	pt3dadd(-44.87, -5.6, 5.17, 1.21)
	pt3dadd(-45.47, -2.69, 5.94, 1.21)
  }
  dend[4] {pt3dclear()
	pt3dadd(-45.47, -2.69, 5.94, 1.21)
	pt3dadd(-47.3, -2.52, 5.78, 1.09)
	pt3dadd(-50.5, -1.13, 7.44, 1.09)
	pt3dadd(-52.7, -1.22, 9.28, 1.09)
	pt3dadd(-55.58, -0.54, 11.02, 1.09)
	pt3dadd(-57.6, 1.21, 12.76, 1.09)
	pt3dadd(-59.08, 1.97, 13.6, 1.09)
	pt3dadd(-60.34, 4.53, 15.34, 1.09)
	pt3dadd(-59.45, 7, 16.26, 1.09)
	pt3dadd(-61.78, 11.09, 18.83, 1.09)
	pt3dadd(-64.4, 14.55, 21.41, 1.09)
	pt3dadd(-65.03, 18.58, 24.12, 1.09)
	pt3dadd(-66.86, 22.05, 25.76, 1.09)
  }
  dend[5] {pt3dclear()
	pt3dadd(-45.47, -2.69, 5.94, 1.21)
	pt3dadd(-46.56, 1.39, 1.57, 0.97)
	pt3dadd(-49.4, 5.58, 1.07, 0.97)
	pt3dadd(-52.25, 9.76, 0.57, 0.97)
	pt3dadd(-52.75, 15.46, -0.83, 0.97)
	pt3dadd(-54.11, 21.96, -3.36, 0.97)
	pt3dadd(-55.46, 26.48, -4.77, 0.97)
	pt3dadd(-56.18, 30.7, -6.1, 0.97)
	pt3dadd(-56.7, 34.99, -8.43, 0.97)
	pt3dadd(-58.78, 38.99, -10.86, 0.97)
	pt3dadd(-59.88, 45.06, -11.34, 0.97)
	pt3dadd(-61.64, 50.02, -12.8, 0.97)
	pt3dadd(-61.91, 55.85, -14.2, 0.97)
	pt3dadd(-61.86, 61.66, -16.58, 0.97)
	pt3dadd(-62.53, 66.61, -17.96, 0.97)
	pt3dadd(-64.88, 70.17, -19.38, 0.97)
	pt3dadd(-67.73, 72.28, -21.75, 0.97)
	pt3dadd(-70.05, 78.68, -24.36, 0.97)
	pt3dadd(-71.8, 86.16, -27.99, 0.97)
	pt3dadd(-70.21, 91.59, -29.22, 0.97)
	pt3dadd(-71.37, 96.18, -31.61, 0.97)
	pt3dadd(-71.95, 104.59, -34.21, 0.97)
	pt3dadd(-72.29, 112.46, -37.76, 0.97)
	pt3dadd(-72.86, 118.88, -39.22, 0.97)
	pt3dadd(-70.88, 122.34, -41.29, 0.97)
	pt3dadd(-72.3, 125.36, -44.62, 0.97)
	pt3dadd(-73.68, 129.69, -47.02, 0.97)
	pt3dadd(-75.16, 131.89, -48.28, 0.97)
  }
  dend[6] {pt3dclear()
	pt3dadd(-21.65, -15.53, -4.39, 3.39)
	pt3dadd(-24.48, -15.54, -5.62, 2.3)
	pt3dadd(-26.73, -15.81, -7.8, 2.3)
	pt3dadd(-28.7, -15.31, -10, 2.3)
	pt3dadd(-31.51, -15.99, -12.19, 2.3)
	pt3dadd(-34.74, -17.88, -15.34, 2.3)
	pt3dadd(-37.47, -19.41, -17.47, 2.3)
	pt3dadd(-39.52, -21.72, -19.5, 2.3)
	pt3dadd(-41.77, -24.4, -21.52, 2.3)
	pt3dadd(-44.27, -25.78, -23.64, 2.06)
  }
  dend[7] {pt3dclear()
	pt3dadd(-44.27, -25.78, -23.64, 2.06)
	pt3dadd(-45.43, -26.44, -25.2, 1.45)
  }
  dend[8] {pt3dclear()
	pt3dadd(-45.43, -26.44, -25.2, 1.45)
	pt3dadd(-46.01, -26.77, -25.98, 1.45)
  }
  dend[9] {pt3dclear()
	pt3dadd(-46.01, -26.77, -25.98, 1.45)
	pt3dadd(-46.59, -27.09, -26.76, 1.45)
  }
  dend[10] {pt3dclear()
	pt3dadd(-46.01, -26.77, -25.98, 1.45)
	pt3dadd(-44.89, -23.18, -28.88, 1.33)
	pt3dadd(-45.86, -20.64, -31.13, 1.33)
	pt3dadd(-48.22, -20.25, -34.36, 1.33)
	pt3dadd(-50.35, -19.72, -37.58, 1.33)
	pt3dadd(-50.46, -17.77, -40.73, 1.33)
	pt3dadd(-51.78, -15.7, -43.99, 1.33)
	pt3dadd(-53.49, -14.08, -46.24, 1.33)
	pt3dadd(-56.25, -10.95, -49.68, 1.33)
	pt3dadd(-58.44, -8.3, -52.03, 1.33)
	pt3dadd(-59.67, -5.42, -54.32, 1.33)
	pt3dadd(-62.84, -2.62, -56.77, 1.33)
	pt3dadd(-64.47, 0.13, -60.09, 1.33)
	pt3dadd(-65.48, 1.51, -63.28, 1.33)
	pt3dadd(-67.34, 2.91, -66.53, 1.33)
	pt3dadd(-67.1, 4.59, -70.64, 1.09)
	pt3dadd(-68.52, 5.31, -73.81, 1.09)
	pt3dadd(-69.97, 7.93, -76.11, 1.09)
	pt3dadd(-70.29, 10.05, -78.28, 1.09)
	pt3dadd(-70.47, 13.29, -80.51, 1.09)
	pt3dadd(-70.59, 14.7, -82.62, 1.09)
  }
  dend[11] {pt3dclear()
	pt3dadd(-45.43, -26.44, -25.2, 1.45)
	pt3dadd(-48.46, -27, -27.92, 1.45)
	pt3dadd(-48.69, -25.93, -28, 1.45)
	pt3dadd(-51.34, -26.1, -28.21, 1.45)
	pt3dadd(-54.22, -26.18, -25.42, 1.45)
	pt3dadd(-56.58, -26.36, -24.59, 1.45)
	pt3dadd(-58.88, -25.92, -23.79, 1.45)
	pt3dadd(-61.6, -24.49, -22.09, 1.45)
	pt3dadd(-64.81, -25.73, -21.27, 1.45)
	pt3dadd(-67.89, -25.99, -20.49, 1.45)
	pt3dadd(-70.52, -25.17, -20.75, 1.45)
	pt3dadd(-74.16, -21.56, -21.28, 1.45)
	pt3dadd(-75.86, -18.84, -23.6, 1.45)
	pt3dadd(-78.86, -17.18, -24.95, 1.45)
	pt3dadd(-82.44, -15.8, -26.33, 1.45)
	pt3dadd(-86.41, -14.24, -27.75, 1.45)
	pt3dadd(-89.15, -12.01, -30.12, 1.45)
	pt3dadd(-91.9, -10.42, -31.45, 1.45)
	pt3dadd(-96.73, -7.83, -31, 1.45)
	pt3dadd(-101.19, -3.99, -30.6, 1.21)
	pt3dadd(-103.28, -1.74, -31.91, 1.21)
  }
  dend[12] {pt3dclear()
	pt3dadd(-103.28, -1.74, -31.91, 1.21)
	pt3dadd(-105.9, 0.71, -31.27, 1.09)
	pt3dadd(-109.57, 4.58, -31.82, 1.09)
	pt3dadd(-110.84, 8.81, -32.19, 1.09)
	pt3dadd(-112.52, 11.84, -33.52, 0.85)
	pt3dadd(-113.38, 12.64, -34.65, 0.85)
  }
  dend[13] {pt3dclear()
	pt3dadd(-103.28, -1.74, -31.91, 1.21)
	pt3dadd(-106.77, -3.63, -33.08, 1.33)
	pt3dadd(-109.77, -4.51, -34.26, 1.33)
	pt3dadd(-113.29, -3.18, -34.63, 1.33)
	pt3dadd(-114.59, -1.57, -35.84, 1.33)
  }
  dend[14] {pt3dclear()
	pt3dadd(-114.59, -1.57, -35.84, 1.33)
	pt3dadd(-118.38, -3.68, -36.01, 0.97)
	pt3dadd(-120.5, -4.6, -34.11, 0.97)
	pt3dadd(-122.74, -3.55, -33.35, 0.97)
	pt3dadd(-125.58, -2.01, -31.67, 0.97)
	pt3dadd(-129.24, -0.14, -31.08, 0.97)
	pt3dadd(-132.76, 1.05, -31.43, 0.97)
	pt3dadd(-135.12, 0.87, -30.61, 0.97)
	pt3dadd(-138.8, -0.1, -28.83, 0.97)
	pt3dadd(-141.56, 0.6, -27.08, 0.97)
	pt3dadd(-144.19, 1.19, -25.32, 0.97)
	pt3dadd(-146.54, 1.89, -22.54, 0.97)
	pt3dadd(-146.79, 4.07, -20.69, 0.97)
	pt3dadd(-148.52, 5.37, -18.9, 0.97)
	pt3dadd(-149.93, 5.62, -15.01, 0.97)
	pt3dadd(-152.22, 5.72, -12.18, 0.97)
	pt3dadd(-153.29, 6.47, -10.3, 0.97)
	pt3dadd(-155.05, 7.35, -7.48, 0.97)
  }
  dend[15] {pt3dclear()
	pt3dadd(-114.59, -1.57, -35.84, 1.33)
	pt3dadd(-118.23, -0.16, -38.23, 0.97)
	pt3dadd(-121.52, 0.74, -39.56, 0.97)
	pt3dadd(-125.17, 1.18, -41.89, 0.97)
	pt3dadd(-129.53, 2.95, -43.36, 0.97)
	pt3dadd(-133, 3.36, -44.67, 0.97)
	pt3dadd(-136.62, 3.87, -46, 0.97)
	pt3dadd(-137.78, 3.61, -48.08, 0.97)
  }
  dend[16] {pt3dclear()
	pt3dadd(-44.27, -25.78, -23.64, 2.06)
	pt3dadd(-45.23, -27.97, -25.59, 1.33)
	pt3dadd(-42.33, -28.67, -29.33, 1.33)
	pt3dadd(-41.77, -29.13, -31.27, 1.33)
	pt3dadd(-43.01, -30.98, -33.26, 1.33)
	pt3dadd(-42.03, -34.53, -34.96, 1.33)
	pt3dadd(-43.1, -38.07, -36.83, 1.33)
	pt3dadd(-44.23, -41.56, -39.72, 1.33)
	pt3dadd(-44.61, -42.79, -42.68, 1.33)
	pt3dadd(-45.42, -45.76, -45.57, 1.33)
	pt3dadd(-47.15, -46.46, -47.68, 1.33)
	pt3dadd(-48.06, -48.46, -50.64, 1.33)
  }
  dend[17] {pt3dclear()
	pt3dadd(-48.06, -48.46, -50.64, 1.33)
	pt3dadd(-45.92, -51.97, -53.26, 0.97)
	pt3dadd(-41.91, -57.32, -53.6, 0.97)
	pt3dadd(-40.23, -60.43, -55.27, 0.97)
	pt3dadd(-38.34, -63.63, -54.92, 0.97)
	pt3dadd(-38.67, -66, -56.8, 0.97)
	pt3dadd(-38.1, -70.21, -58.5, 0.97)
	pt3dadd(-35.29, -71.39, -60.21, 0.97)
	pt3dadd(-33.08, -73.84, -61.89, 0.97)
	pt3dadd(-30.76, -76.94, -62.51, 0.97)
	pt3dadd(-25.69, -82.49, -63.75, 0.97)
	pt3dadd(-21.89, -89.88, -64.99, 0.97)
	pt3dadd(-18.05, -93.33, -67.48, 0.97)
	pt3dadd(-16.73, -97.82, -69.09, 0.97)
	pt3dadd(-14.6, -102.3, -71.65, 0.97)
	pt3dadd(-10.51, -111.78, -73.73, 0.97)
	pt3dadd(-10.13, -116.06, -74.43, 0.97)
	pt3dadd(-9.15, -119.84, -74.11, 0.97)
	pt3dadd(-5.89, -123.04, -70.63, 0.97)
	pt3dadd(-4.26, -124.24, -69.42, 0.97)
  }
  dend[18] {pt3dclear()
	pt3dadd(-48.06, -48.46, -50.64, 1.33)
	pt3dadd(-49.14, -49.78, -55.66, 1.33)
  }
}
proc shape3d_2() {
  dend[18] {	pt3dadd(-50.3, -49.28, -58.81, 1.21)
	pt3dadd(-51.54, -50.47, -61.84, 1.21)
	pt3dadd(-51.86, -52.64, -62.74, 1.21)
	pt3dadd(-52.89, -56.54, -64.58, 1.21)
	pt3dadd(-54.05, -60.44, -66.43, 1.21)
	pt3dadd(-54.02, -62.67, -70.31, 1.09)
	pt3dadd(-55.1, -63.78, -72.33, 1.09)
	pt3dadd(-57.2, -67.13, -75.3, 1.09)
	pt3dadd(-57.43, -70.35, -79.14, 1.09)
	pt3dadd(-57.42, -73.89, -80.92, 1.09)
	pt3dadd(-59.24, -77.14, -82.87, 1.09)
	pt3dadd(-60.63, -78.76, -84.88, 1.09)
	pt3dadd(-62.12, -80.09, -85.92, 1.09)
	pt3dadd(-63.43, -81.22, -87.97, 0.73)
  }
  dend[19] {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(-0.39, -11.27, 3.06, 2.42)
	pt3dadd(-0.14, -14.44, 4.28, 2.18)
	pt3dadd(-1.19, -20.43, 5.59, 2.18)
	pt3dadd(-0.57, -23.69, 6.85, 2.18)
	pt3dadd(0.97, -29.46, 7.35, 2.18)
	pt3dadd(1.33, -33.07, 7.61, 2.18)
  }
  dend[20] {pt3dclear()
	pt3dadd(1.33, -33.07, 7.61, 2.18)
	pt3dadd(4.73, -36.71, 8.11, 1.09)
	pt3dadd(4.91, -39.28, 9.3, 1.09)
	pt3dadd(6.16, -42.94, 12.65, 1.09)
	pt3dadd(7.01, -44.41, 14.82, 1.09)
	pt3dadd(8.78, -46.18, 18.09, 1.09)
	pt3dadd(9.16, -46.16, 21.14, 1.09)
	pt3dadd(10.51, -46.71, 25.3, 1.09)
	pt3dadd(12.23, -46.8, 28.46, 1.09)
	pt3dadd(14.27, -48.01, 30.71, 1.09)
	pt3dadd(16.67, -49.85, 34.03, 0.73)
	pt3dadd(18.45, -50.53, 37.24, 0.73)
  }
  dend[21] {pt3dclear()
	pt3dadd(1.33, -33.07, 7.61, 2.18)
	pt3dadd(2.11, -37.67, 6.96, 1.93)
	pt3dadd(3.37, -41.66, 7.31, 1.93)
  }
  dend[22] {pt3dclear()
	pt3dadd(3.37, -41.66, 7.31, 1.93)
	pt3dadd(1.08, -45.42, 7.37, 1.21)
	pt3dadd(0.31, -46.23, 7.36, 1.21)
	pt3dadd(-0.97, -46.72, 7.29, 1.21)
	pt3dadd(-1.78, -48.26, 7.33, 1.21)
  }
  dend[23] {pt3dclear()
	pt3dadd(-1.78, -48.26, 7.33, 1.21)
	pt3dadd(-3.72, -47.02, 7.09, 0.85)
	pt3dadd(-6.86, -47.23, 6.85, 0.85)
	pt3dadd(-9.27, -48.79, 8.77, 0.85)
	pt3dadd(-11.07, -49.21, 10.66, 0.85)
	pt3dadd(-13.9, -51.87, 11.61, 0.85)
	pt3dadd(-15.87, -52.36, 12.49, 0.85)
	pt3dadd(-17.78, -54.55, 13.49, 0.85)
	pt3dadd(-20.42, -55.06, 15.32, 0.85)
	pt3dadd(-24.14, -56.88, 17.15, 0.85)
	pt3dadd(-27.87, -57.49, 18.9, 0.85)
	pt3dadd(-30.69, -57.41, 20.68, 0.85)
	pt3dadd(-33.13, -56.31, 22.42, 0.85)
	pt3dadd(-34.57, -56.68, 24.34, 0.85)
	pt3dadd(-36.86, -56.58, 27.17, 0.85)
  }
  dend[24] {pt3dclear()
	pt3dadd(-1.78, -48.26, 7.33, 1.21)
	pt3dadd(-2.02, -51.38, 8.51, 1.09)
	pt3dadd(-3.64, -53.71, 10.54, 1.09)
	pt3dadd(-7.22, -57.41, 11.5, 1.09)
	pt3dadd(-9.4, -59.27, 12.45, 1.09)
	pt3dadd(-10.51, -59.8, 13.4, 1.09)
	pt3dadd(-13.26, -63.42, 14.42, 1.09)
	pt3dadd(-14.81, -64.35, 15.36, 1.09)
  }
  dend[25] {pt3dclear()
	pt3dadd(-14.81, -64.35, 15.36, 1.09)
	pt3dadd(-16.76, -64.98, 16.25, 0.97)
	pt3dadd(-16.49, -67.62, 16.44, 0.97)
	pt3dadd(-18.28, -71.57, 16.55, 0.97)
	pt3dadd(-20.42, -76.76, 16.71, 0.97)
	pt3dadd(-23.57, -80.38, 16.69, 0.97)
	pt3dadd(-25.33, -84.56, 16.82, 0.97)
	pt3dadd(-27.62, -86.33, 15.74, 0.97)
	pt3dadd(-29.83, -90.16, 14.8, 0.97)
	pt3dadd(-29.75, -92.77, 13.97, 0.97)
	pt3dadd(-31.21, -98.41, 12.21, 0.97)
	pt3dadd(-34.6, -105.03, 11.35, 0.97)
	pt3dadd(-36.39, -107.64, 11.38, 0.97)
	pt3dadd(-38.63, -110.67, 11.39, 0.97)
	pt3dadd(-40.24, -112.66, 11.39, 0.97)
	pt3dadd(-39.71, -115.08, 12.59, 0.97)
	pt3dadd(-41.45, -117.09, 12.58, 0.97)
	pt3dadd(-44.22, -117.26, 12.37, 0.97)
	pt3dadd(-50.47, -123.08, 11.24, 0.97)
	pt3dadd(-52.43, -126.23, 9.28, 0.97)
	pt3dadd(-53.38, -130.31, 6.45, 0.97)
	pt3dadd(-56.54, -131.92, 5.29, 0.97)
	pt3dadd(-59.1, -133.92, 3.2, 0.97)
	pt3dadd(-62.78, -133.67, -0.11, 0.97)
	pt3dadd(-66.52, -133.61, -2.43, 0.97)
	pt3dadd(-69.46, -134.31, -4.63, 0.97)
	pt3dadd(-70.31, -136.48, -6.57, 0.97)
	pt3dadd(-72.4, -139.51, -8.55, 0.97)
	pt3dadd(-75.18, -140.13, -9.74, 0.97)
	pt3dadd(-78.58, -139.22, -11.07, 0.97)
	pt3dadd(-81.58, -137.67, -12.42, 0.97)
	pt3dadd(-82.48, -137.6, -13.5, 0.97)
  }
  dend[26] {pt3dclear()
	pt3dadd(-14.81, -64.35, 15.36, 1.09)
	pt3dadd(-14.52, -68.01, 16.62, 1.09)
	pt3dadd(-14.28, -72.29, 17.92, 1.09)
	pt3dadd(-12.62, -76.28, 19.31, 1.09)
	pt3dadd(-12.08, -82.34, 20.75, 1.09)
	pt3dadd(-13.79, -87.79, 21.97, 1.09)
	pt3dadd(-14.38, -93.35, 23.28, 1.09)
	pt3dadd(-14.98, -95.41, 24.37, 1.09)
	pt3dadd(-17.65, -100.39, 26.49, 0.97)
	pt3dadd(-19.75, -104.65, 29.61, 0.97)
	pt3dadd(-21.09, -107.2, 31.67, 0.97)
	pt3dadd(-22.85, -110.94, 32.78, 0.97)
	pt3dadd(-25.29, -119.22, 33.11, 0.97)
	pt3dadd(-26.41, -122.48, 33.23, 0.97)
	pt3dadd(-27.15, -123.66, 33.25, 0.97)
  }
  dend[27] {pt3dclear()
	pt3dadd(3.37, -41.66, 7.31, 1.93)
	pt3dadd(4.73, -46.85, 7.76, 1.33)
	pt3dadd(5.28, -54.02, 7.26, 1.33)
	pt3dadd(4.28, -56.85, 8.36, 1.33)
	pt3dadd(5.17, -59.54, 8.61, 1.33)
	pt3dadd(6.18, -60.04, 8.72, 1.33)
	pt3dadd(4.2, -64.5, 8.85, 1.33)
	pt3dadd(5.84, -70.67, 10.38, 1.33)
	pt3dadd(7.67, -77.45, 11.96, 1.33)
	pt3dadd(10.52, -85.05, 10.67, 1.33)
	pt3dadd(12.65, -93.39, 10.37, 1.33)
	pt3dadd(14.3, -97.49, 8.75, 1.33)
	pt3dadd(14.93, -101.86, 8.08, 1.33)
	pt3dadd(14.6, -105.56, 6.28, 1.33)
  }
  dend[28] {pt3dclear()
	pt3dadd(14.6, -105.56, 6.28, 1.33)
	pt3dadd(17.6, -109.09, 3.73, 1.09)
	pt3dadd(19.66, -110.76, 2.99, 1.09)
	pt3dadd(23.35, -113.43, 1.45, 1.09)
	pt3dadd(24.21, -116.45, 0.71, 1.09)
	pt3dadd(27.43, -121.71, -0.7, 1.09)
	pt3dadd(30.21, -126.6, -3.18, 1.09)
	pt3dadd(31.69, -129.57, -5.89, 1.09)
	pt3dadd(35.6, -133.18, -7.35, 1.09)
	pt3dadd(39.38, -136.69, -8.84, 1.09)
	pt3dadd(41.74, -140.7, -10.4, 1.09)
	pt3dadd(43.81, -142.94, -12.1, 1.09)
	pt3dadd(45.55, -143.8, -12.91, 1.09)
  }
  dend[29] {pt3dclear()
	pt3dadd(14.6, -105.56, 6.28, 1.33)
	pt3dadd(15.01, -110.07, 5.59, 0.97)
	pt3dadd(17.81, -121.83, 7.58, 0.97)
	pt3dadd(17.7, -126.69, 7.88, 0.97)
	pt3dadd(20.17, -136.31, 9.7, 0.97)
	pt3dadd(21.55, -141.5, 10.14, 0.97)
	pt3dadd(23.58, -146.02, 10.59, 0.97)
	pt3dadd(24.16, -155.41, 11.24, 0.97)
	pt3dadd(24.78, -161.54, 11.68, 0.97)
	pt3dadd(25.08, -164.53, 11.9, 0.97)
	pt3dadd(27.29, -169.63, 12.4, 0.97)
	pt3dadd(29.04, -177.33, 13.04, 0.97)
	pt3dadd(28.92, -181.55, 12.29, 0.97)
	pt3dadd(30.42, -186.73, 12.74, 0.97)
	pt3dadd(29.63, -189.29, 13.85, 0.97)
	pt3dadd(30.65, -194.08, 15.25, 0.97)
	pt3dadd(31.24, -198.97, 17.62, 0.97)
  }
  dend[30] {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(0.72, -11.51, -6.88, 4.6)
	pt3dadd(2.97, -16.09, -9.42, 4.47)
  }
  dend[31] {pt3dclear()
	pt3dadd(2.97, -16.09, -9.42, 4.47)
	pt3dadd(3.21, -22.79, -7.97, 2.18)
	pt3dadd(5.64, -31.27, -7.23, 2.18)
	pt3dadd(7.02, -35.81, -7.84, 1.93)
	pt3dadd(10.65, -38.86, -6.35, 1.81)
	pt3dadd(16.38, -40.87, -6.76, 1.57)
	pt3dadd(19.61, -44.48, -7.28, 1.57)
	pt3dadd(23.42, -48.57, -6.71, 1.57)
	pt3dadd(25.19, -50.13, -5.46, 1.57)
  }
  dend[32] {pt3dclear()
	pt3dadd(25.19, -50.13, -5.46, 1.57)
	pt3dadd(29.15, -52.13, -5.02, 0.97)
	pt3dadd(31.48, -56.01, -4.58, 0.97)
	pt3dadd(35.09, -60.05, -3.03, 0.97)
	pt3dadd(38.13, -63.3, -1.58, 0.97)
	pt3dadd(42.69, -67.22, 0.04, 0.97)
	pt3dadd(45.26, -71.3, 2.51, 0.97)
	pt3dadd(47.26, -74.45, 4.89, 0.97)
	pt3dadd(50.28, -78.24, 7.38, 0.97)
	pt3dadd(55.53, -84.93, 10.24, 0.97)
	pt3dadd(58.74, -88.52, 11.73, 0.97)
	pt3dadd(61.7, -91.06, 13.14, 0.97)
	pt3dadd(61.98, -93.81, 13.34, 0.97)
	pt3dadd(63.97, -97.97, 13.76, 0.97)
	pt3dadd(65.46, -99.5, 13.98, 0.97)
	pt3dadd(67.13, -100.42, 14.17, 0.97)
	pt3dadd(68.95, -102.89, 14.48, 0.97)
	pt3dadd(71.01, -107.65, 14.95, 0.97)
	pt3dadd(72.73, -115.11, 15.56, 0.97)
	pt3dadd(74.35, -120.06, 14, 0.97)
	pt3dadd(78.88, -127.05, 13.8, 0.97)
	pt3dadd(82.1, -134.96, 14.57, 0.97)
	pt3dadd(82.46, -138.44, 14.82, 0.97)
	pt3dadd(86.92, -143.28, 17.5, 0.97)
	pt3dadd(87.94, -147.41, 17.84, 0.97)
	pt3dadd(92.48, -154.41, 17.65, 0.97)
	pt3dadd(92.74, -158.26, 17.92, 0.97)
	pt3dadd(95.39, -161.74, 18.35, 0.97)
	pt3dadd(96.69, -165.44, 17.69, 0.73)
  }
  dend[33] {pt3dclear()
	pt3dadd(25.19, -50.13, -5.46, 1.57)
	pt3dadd(26.35, -54.93, -6.07, 1.21)
	pt3dadd(29.23, -59.91, -6.53, 1.21)
	pt3dadd(29.4, -63.25, -7.3, 1.21)
  }
}
proc shape3d_3() {
  dend[34] {pt3dclear()
	pt3dadd(29.4, -63.25, -7.3, 1.21)
	pt3dadd(33.93, -67.8, -7.65, 0.97)
	pt3dadd(36.39, -71.02, -8.26, 0.97)
	pt3dadd(39.28, -73.69, -8.86, 0.97)
	pt3dadd(42.88, -77.38, -9.34, 0.97)
	pt3dadd(48.1, -83.51, -8.53, 0.97)
	pt3dadd(48.97, -90.16, -9.04, 0.97)
	pt3dadd(51.19, -93.95, -10.63, 0.97)
	pt3dadd(52.32, -96.18, -14.42, 0.97)
	pt3dadd(54.1, -99.6, -17.07, 0.97)
	pt3dadd(55.32, -102.91, -20.78, 0.97)
	pt3dadd(58.44, -105.23, -23.4, 0.97)
	pt3dadd(61.76, -108.37, -25.95, 0.97)
	pt3dadd(64.77, -111.47, -27.52, 0.97)
	pt3dadd(67.37, -111.26, -28.33, 0.97)
	pt3dadd(72.05, -110.77, -27.99, 0.97)
	pt3dadd(75.08, -110.04, -28.8, 0.97)
	pt3dadd(76.74, -108.41, -28.77, 0.97)
	pt3dadd(77.18, -107.34, -29.81, 0.97)
  }
  dend[35] {pt3dclear()
	pt3dadd(29.4, -63.25, -7.3, 1.21)
	pt3dadd(27.76, -68.64, -7.09, 0.85)
	pt3dadd(27.11, -71.74, -6.94, 0.85)
	pt3dadd(27.74, -79.19, -6.41, 0.85)
	pt3dadd(27.5, -86.49, -5.97, 0.85)
	pt3dadd(27.83, -91.38, -6.63, 0.85)
	pt3dadd(29.46, -99.21, -6, 0.85)
	pt3dadd(31.57, -104.01, -4.52, 0.85)
	pt3dadd(32.93, -109.43, -2.05, 0.85)
	pt3dadd(33.33, -112.39, 0.17, 0.85)
	pt3dadd(32.59, -117.96, 3.48, 0.85)
	pt3dadd(31.29, -120.98, 5.59, 0.85)
	pt3dadd(31.93, -122.06, 6.71, 0.85)
  }
  dend[36] {pt3dclear()
	pt3dadd(2.97, -16.09, -9.42, 4.47)
	pt3dadd(0.72, -18, -12.5, 3.14)
	pt3dadd(-0.87, -19.9, -14.51, 2.54)
	pt3dadd(-1.51, -21.03, -17.51, 2.54)
	pt3dadd(-1.79, -22.01, -20.48, 2.54)
  }
  dend[37] {pt3dclear()
	pt3dadd(-1.79, -22.01, -20.48, 2.54)
	pt3dadd(-3.72, -20.78, -22.73, 1.69)
	pt3dadd(-6.69, -19.9, -25.03, 1.69)
	pt3dadd(-8.92, -17.98, -27.34, 1.69)
	pt3dadd(-10.24, -17.12, -30.52, 1.69)
	pt3dadd(-10.38, -15.02, -31.67, 1.45)
	pt3dadd(-10.09, -10.4, -33.95, 1.45)
	pt3dadd(-11.06, -9.39, -37.11, 1.45)
	pt3dadd(-12.82, -9.72, -39.24, 1.45)
	pt3dadd(-13.53, -7.27, -41.47, 1.45)
	pt3dadd(-12.85, -2.98, -43.7, 1.45)
	pt3dadd(-11.9, 2.3, -45.97, 1.45)
	pt3dadd(-11.7, 6.11, -49.22, 1.45)
	pt3dadd(-11.99, 9.98, -52.5, 1.45)
	pt3dadd(-12.89, 11.5, -55.69, 1.45)
	pt3dadd(-12.26, 13.4, -58.78, 1.45)
	pt3dadd(-12.52, 14.49, -61.88, 1.45)
	pt3dadd(-11.92, 15.55, -64.92, 1.45)
  }
  dend[38] {pt3dclear()
	pt3dadd(-11.92, 15.55, -64.92, 1.45)
	pt3dadd(-8.97, 19, -66.91, 0.97)
	pt3dadd(-6.26, 22.41, -68.92, 0.97)
	pt3dadd(-4.84, 27.66, -69.15, 0.97)
	pt3dadd(-2.76, 31.82, -70.25, 0.97)
  }
  dend[39] {pt3dclear()
	pt3dadd(-11.92, 15.55, -64.92, 1.45)
	pt3dadd(-9.76, 15.13, -68.74, 1.45)
	pt3dadd(-9.47, 15.12, -72.73, 1.45)
	pt3dadd(-8.78, 15.22, -75.7, 1.45)
	pt3dadd(-8.58, 15.94, -77.74, 1.45)
	pt3dadd(-10.38, 16.75, -80.95, 1.45)
	pt3dadd(-9.91, 15.49, -83.85, 1.21)
	pt3dadd(-9.67, 15.74, -85.86, 1.21)
  }
  dend[40] {pt3dclear()
	pt3dadd(-1.79, -22.01, -20.48, 2.54)
	pt3dadd(-3.64, -24.36, -23.5, 1.69)
	pt3dadd(-4.6, -25.89, -26.49, 1.69)
	pt3dadd(-5.21, -26.6, -30.52, 1.69)
	pt3dadd(-5.16, -28.52, -33.4, 1.69)
	pt3dadd(-5.64, -29.77, -38.39, 1.69)
	pt3dadd(-6.13, -31.92, -40.3, 1.69)
  }
  dend[41] {pt3dclear()
	pt3dadd(-6.13, -31.92, -40.3, 1.69)
	pt3dadd(-9.68, -33.43, -39.48, 1.21)
	pt3dadd(-12.22, -35.23, -40.58, 1.21)
	pt3dadd(-16.96, -35.56, -41.94, 1.21)
	pt3dadd(-19.43, -35.09, -42.17, 1.21)
	pt3dadd(-23.84, -35.15, -43.52, 1.21)
	pt3dadd(-26.89, -38.94, -44.53, 1.21)
	pt3dadd(-27.74, -41.9, -45.41, 1.21)
	pt3dadd(-28.3, -45.18, -46.25, 1.21)
	pt3dadd(-32.36, -49.71, -49.3, 1.21)
	pt3dadd(-33.85, -51.9, -52.3, 1.21)
	pt3dadd(-36.56, -52.46, -54.49, 1.21)
	pt3dadd(-39.89, -52.18, -57.79, 1.21)
	pt3dadd(-42.06, -56.36, -58.7, 1.21)
	pt3dadd(-45.95, -55.94, -61.05, 1.21)
	pt3dadd(-48.35, -55.98, -63.25, 1.21)
	pt3dadd(-50.64, -58.3, -65.29, 1.21)
	pt3dadd(-53.3, -59.34, -67.45, 1.21)
	pt3dadd(-55.91, -62.5, -70.47, 1.21)
	pt3dadd(-57.15, -64.57, -75.46, 1.09)
	pt3dadd(-57.53, -68.78, -79.24, 1.09)
	pt3dadd(-58.69, -70.82, -82.22, 1.09)
	pt3dadd(-59.99, -72.51, -85.23, 1.09)
	pt3dadd(-60.77, -70.99, -88.41, 1.09)
	pt3dadd(-61.42, -69.8, -89.54, 1.09)
  }
  dend[42] {pt3dclear()
	pt3dadd(-6.13, -31.92, -40.3, 1.69)
	pt3dadd(-5.85, -34.46, -42.13, 1.57)
	pt3dadd(-7.77, -36.74, -44.14, 1.57)
	pt3dadd(-8.86, -38.73, -48.12, 1.57)
	pt3dadd(-9.99, -41.66, -50.04, 1.57)
  }
  dend[43] {pt3dclear()
	pt3dadd(-9.99, -41.66, -50.04, 1.57)
	pt3dadd(-9.83, -45.42, -51.79, 1.09)
	pt3dadd(-9.33, -48.91, -53.54, 1.09)
	pt3dadd(-8.58, -51.28, -55.34, 1.09)
	pt3dadd(-9.35, -53.08, -57.3, 1.09)
	pt3dadd(-8.15, -57.47, -58.93, 1.09)
	pt3dadd(-8.17, -59.44, -60.82, 1.09)
	pt3dadd(-6.05, -67.77, -61.12, 1.09)
	pt3dadd(-4.56, -72.61, -62.7, 1.09)
	pt3dadd(-2.59, -75.87, -63.34, 1.09)
	pt3dadd(-1.58, -79.55, -65.03, 1.09)
	pt3dadd(-0.38, -82.84, -66.73, 1.09)
	pt3dadd(0.05, -88.59, -69.35, 1.09)
	pt3dadd(1.79, -90.01, -71.13, 1.09)
	pt3dadd(0.21, -93.35, -73.05, 0.85)
	pt3dadd(-0.27, -97.01, -75.87, 0.85)
	pt3dadd(-0.41, -99.12, -77.76, 0.85)
	pt3dadd(-1.07, -101.22, -80.69, 0.85)
  }
  dend[44] {pt3dclear()
	pt3dadd(-9.99, -41.66, -50.04, 1.57)
	pt3dadd(-11.77, -43.74, -56.08, 1.33)
	pt3dadd(-12.73, -45.27, -59.07, 1.33)
	pt3dadd(-12.56, -47.16, -61.95, 1.33)
	pt3dadd(-13.2, -48.95, -63.9, 1.33)
	pt3dadd(-15.26, -51.14, -65.94, 1.33)
	pt3dadd(-15.42, -52.88, -67.85, 1.33)
	pt3dadd(-15.97, -54.41, -69.8, 1.33)
	pt3dadd(-15.65, -55.44, -72.73, 1.33)
	pt3dadd(-15.3, -57.49, -74.58, 1.33)
	pt3dadd(-14.65, -60.55, -77.35, 1.33)
	pt3dadd(-15.11, -61.71, -79.32, 1.33)
	pt3dadd(-15.91, -63.59, -82.28, 1.33)
	pt3dadd(-16.93, -62.87, -84.42, 1.33)
	pt3dadd(-16.93, -63.09, -87.42, 1.09)
  }
  apic {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(3.81, 14.62, -5.29, 5.93)
	pt3dadd(4.53, 18, -8.47, 5.93)
	pt3dadd(5.81, 22.47, -10.66, 5.93)
	pt3dadd(8.07, 26.26, -13.74, 5.44)
	pt3dadd(8.36, 29.66, -15.95, 5.44)
  }
  apic[1] {pt3dclear()
	pt3dadd(8.36, 29.66, -15.95, 5.44)
	pt3dadd(7.12, 32.55, -23.27, 2.9)
	pt3dadd(3.97, 32.79, -25.55, 2.9)
	pt3dadd(0.6, 34, -27.9, 2.9)
	pt3dadd(-3.24, 37.12, -31.43, 2.9)
	pt3dadd(-7.12, 40.94, -33.99, 2.54)
  }
  apic[2] {pt3dclear()
	pt3dadd(-7.12, 40.94, -33.99, 2.54)
	pt3dadd(-8.36, 40.52, -38.09, 1.81)
	pt3dadd(-10.03, 40.44, -40.22, 1.81)
	pt3dadd(-12.27, 41.39, -42.48, 1.81)
	pt3dadd(-15.57, 41.09, -43.72, 1.81)
	pt3dadd(-17.72, 40.31, -44.85, 1.81)
  }
  apic[3] {pt3dclear()
	pt3dadd(-17.72, 40.31, -44.85, 1.81)
	pt3dadd(-19.96, 41.57, -46.12, 1.09)
	pt3dadd(-22.02, 42.38, -47.34, 1.09)
	pt3dadd(-24.62, 43.6, -48.63, 1.09)
	pt3dadd(-25.8, 45.22, -49.83, 1.09)
	pt3dadd(-26.59, 47.86, -51.07, 1.09)
	pt3dadd(-26.9, 50.31, -52.26, 1.09)
	pt3dadd(-27.02, 51.51, -52.35, 1.09)
	pt3dadd(-29.06, 51.63, -54.53, 1.09)
	pt3dadd(-30.08, 51.9, -57.64, 1.09)
	pt3dadd(-31.64, 53.18, -59.86, 1.09)
	pt3dadd(-32.86, 53.07, -62.97, 1.09)
	pt3dadd(-35.42, 52.95, -66.18, 1.09)
	pt3dadd(-38.14, 54.16, -67.48, 1.09)
	pt3dadd(-40.77, 54.76, -70.74, 1.09)
	pt3dadd(-44.12, 57.05, -73.17, 1.09)
	pt3dadd(-46.7, 60.03, -75.58, 1.09)
	pt3dadd(-48.93, 60.74, -77.81, 1.09)
	pt3dadd(-49.85, 63.36, -79.06, 1.09)
	pt3dadd(-52.88, 64.83, -81.4, 1.09)
	pt3dadd(-56.07, 65.44, -83.71, 1.09)
	pt3dadd(-59.52, 67.48, -86.13, 1.09)
	pt3dadd(-61.6, 69.06, -88.4, 1.09)
	pt3dadd(-66.18, 72.24, -91.99, 0.97)
	pt3dadd(-68.83, 71.86, -95.19, 0.97)
	pt3dadd(-71.63, 73.92, -96.56, 0.97)
	pt3dadd(-71.84, 73.76, -98.57, 0.97)
  }
  apic[4] {pt3dclear()
	pt3dadd(-17.72, 40.31, -44.85, 1.81)
	pt3dadd(-19.64, 38.46, -45.89, 1.33)
	pt3dadd(-19.74, 37.98, -48.89, 1.33)
	pt3dadd(-18.81, 37.45, -50.79, 1.33)
	pt3dadd(-17.74, 36.26, -53.64, 1.33)
	pt3dadd(-16.93, 35.72, -55.55, 1.33)
	pt3dadd(-18.11, 35.13, -58.63, 1.33)
	pt3dadd(-19.11, 35.17, -61.72, 1.33)
	pt3dadd(-20.03, 35.71, -64.85, 1.33)
	pt3dadd(-18.9, 36.77, -66.84, 1.33)
	pt3dadd(-15.57, 35.16, -68.48, 1.33)
	pt3dadd(-17.62, 37.94, -72.84, 1.33)
	pt3dadd(-16.61, 38.55, -75.81, 1.33)
	pt3dadd(-14.52, 37.41, -77.58, 1.33)
	pt3dadd(-13.63, 33.83, -81.3, 1.33)
	pt3dadd(-10.94, 32.07, -83.99, 1.33)
	pt3dadd(-11.34, 31.09, -86.98, 0.85)
  }
}
proc shape3d_4() {
  apic[4] {	pt3dadd(-10.59, 32.23, -89, 0.85)
	pt3dadd(-8.84, 34.02, -91.99, 0.85)
	pt3dadd(-7.7, 33.76, -93.89, 0.85)
  }
  apic[5] {pt3dclear()
	pt3dadd(-7.12, 40.94, -33.99, 2.54)
	pt3dadd(-10.29, 43.51, -29.38, 1.45)
	pt3dadd(-13.72, 46.08, -27.81, 1.45)
	pt3dadd(-16.06, 50.52, -27.28, 1.45)
	pt3dadd(-18.34, 54.35, -26.7, 1.45)
	pt3dadd(-21.42, 57.73, -26.16, 1.45)
	pt3dadd(-25.62, 62.57, -25.8, 1.45)
	pt3dadd(-28, 64.51, -26.12, 1.45)
	pt3dadd(-30.04, 67.93, -26.5, 1.45)
	pt3dadd(-31.8, 73.88, -26.02, 1.21)
	pt3dadd(-35.12, 83.18, -25.87, 1.21)
	pt3dadd(-35.81, 90.02, -26.36, 1.21)
	pt3dadd(-37.67, 95.29, -26.85, 1.21)
	pt3dadd(-40.26, 98.72, -26.27, 1.21)
	pt3dadd(-43.16, 105.04, -25.91, 1.21)
	pt3dadd(-47.46, 117.46, -25.03, 1.21)
	pt3dadd(-48.73, 123.22, -24.5, 1.21)
	pt3dadd(-52.94, 128.62, -23.17, 1.21)
	pt3dadd(-52.6, 132.32, -21.37, 1.21)
	pt3dadd(-53.33, 138.08, -19.79, 1.21)
	pt3dadd(-54.06, 144.63, -19.26, 1.21)
	pt3dadd(-52.78, 154.5, -17.78, 1.21)
	pt3dadd(-54.4, 158.79, -15.17, 1.21)
	pt3dadd(-55.72, 163.28, -13.55, 0.97)
	pt3dadd(-58.97, 166.92, -11.03, 0.97)
	pt3dadd(-62.62, 170.31, -9.53, 0.97)
  }
  apic[6] {pt3dclear()
	pt3dadd(8.36, 29.66, -15.95, 5.44)
	pt3dadd(13.05, 32.69, -17.78, 5.2)
	pt3dadd(15.64, 33.67, -19.64, 5.2)
	pt3dadd(19.42, 40.18, -20.76, 4.11)
	pt3dadd(20.08, 41.64, -21.81, 4.11)
  }
  apic[7] {pt3dclear()
	pt3dadd(20.08, 41.64, -21.81, 4.11)
	pt3dadd(24.14, 41.53, -25.5, 1.81)
	pt3dadd(27.51, 40.78, -27.19, 1.81)
	pt3dadd(28.72, 39.36, -30.02, 1.81)
  }
  apic[8] {pt3dclear()
	pt3dadd(28.72, 39.36, -30.02, 1.81)
	pt3dadd(31.86, 39.22, -32.77, 1.21)
	pt3dadd(36.06, 39.89, -34.49, 1.21)
	pt3dadd(38.69, 40.29, -34.31, 1.21)
	pt3dadd(38.56, 41.61, -34.4, 1.21)
	pt3dadd(39.89, 42.85, -34.37, 1.21)
	pt3dadd(42.2, 41.85, -36.14, 1.21)
	pt3dadd(44.45, 42.89, -35.02, 1.21)
	pt3dadd(48.35, 44.35, -33.79, 1.21)
	pt3dadd(50.9, 45.04, -34.64, 1.21)
	pt3dadd(53.39, 43.89, -35.37, 1.21)
	pt3dadd(57.03, 45.56, -34.18, 1.21)
	pt3dadd(60.1, 45.81, -34.96, 1.21)
	pt3dadd(62.51, 46.72, -35.83, 1.21)
	pt3dadd(66.13, 45.87, -37.5, 1.21)
	pt3dadd(68.31, 47.85, -38.45, 1.21)
	pt3dadd(69.2, 52.19, -38.66, 1.21)
	pt3dadd(71.32, 56.42, -38.76, 1.21)
	pt3dadd(75.63, 60.2, -39.66, 1.21)
	pt3dadd(79.68, 62.09, -39.46, 1.21)
	pt3dadd(83.58, 65.41, -39.36, 0.85)
	pt3dadd(85.04, 68.3, -38.43, 0.85)
  }
  apic[9] {pt3dclear()
	pt3dadd(28.72, 39.36, -30.02, 1.81)
	pt3dadd(29.93, 36.72, -32.77, 1.45)
	pt3dadd(32.64, 32.98, -34.32, 1.45)
	pt3dadd(33.87, 30.66, -36.09, 1.45)
	pt3dadd(35.33, 27.93, -38.81, 1.45)
	pt3dadd(37.33, 24.65, -41.45, 1.45)
	pt3dadd(38.76, 21.07, -44.13, 1.45)
  }
  apic[10] {pt3dclear()
	pt3dadd(38.76, 21.07, -44.13, 1.45)
	pt3dadd(40.29, 17.95, -43.8, 0.85)
	pt3dadd(44.47, 14.23, -42.23, 0.85)
	pt3dadd(48.33, 11.31, -40.72, 0.85)
	pt3dadd(52.43, 8.86, -38.23, 0.85)
	pt3dadd(53.78, 8.76, -38.12, 0.85)
  }
  apic[11] {pt3dclear()
	pt3dadd(38.76, 21.07, -44.13, 1.45)
	pt3dadd(42.02, 19.65, -54.83, 0.97)
	pt3dadd(43.5, 18.45, -56.65, 0.97)
	pt3dadd(45.02, 15.68, -58.36, 0.97)
	pt3dadd(47.37, 14.42, -62.11, 0.97)
	pt3dadd(47.64, 15.08, -65.15, 0.97)
	pt3dadd(49.57, 12.52, -67.84, 0.97)
	pt3dadd(51.99, 12.44, -70.66, 0.97)
	pt3dadd(54.55, 9.37, -71.27, 0.97)
	pt3dadd(55.99, 7.43, -73.04, 0.97)
	pt3dadd(60.37, 6.3, -74.62, 0.97)
	pt3dadd(64.39, 2.7, -76.08, 0.97)
	pt3dadd(67.25, 2.25, -77.84, 0.97)
	pt3dadd(69.32, 2.1, -77.66, 0.97)
	pt3dadd(74, -0.25, -78.14, 0.97)
	pt3dadd(77.86, -1.52, -80.77, 0.85)
	pt3dadd(79.97, -1.68, -82.6, 0.85)
  }
  apic[12] {pt3dclear()
	pt3dadd(20.08, 41.64, -21.81, 4.11)
	pt3dadd(20.26, 47.21, -24.16, 3.14)
	pt3dadd(22.37, 53.55, -25.4, 3.14)
	pt3dadd(24.08, 58.21, -25.57, 2.66)
	pt3dadd(25.36, 58.72, -25.5, 2.66)
  }
  apic[13] {pt3dclear()
	pt3dadd(25.36, 58.72, -25.5, 2.66)
	pt3dadd(26.88, 60.23, -23.46, 1.57)
	pt3dadd(26.88, 61.89, -22.56, 1.57)
	pt3dadd(26.97, 65.12, -21.76, 1.57)
	pt3dadd(27.24, 68.43, -21.95, 1.57)
	pt3dadd(28.7, 70.11, -20.93, 1.57)
	pt3dadd(30.5, 70.3, -20.8, 1.57)
	pt3dadd(32.04, 70.58, -20.7, 1.57)
  }
  apic[14] {pt3dclear()
	pt3dadd(32.04, 70.58, -20.7, 1.57)
	pt3dadd(36.24, 74.67, -20.62, 1.09)
	pt3dadd(38.06, 77.27, -22.65, 1.09)
	pt3dadd(38.61, 79.36, -24.75, 1.09)
	pt3dadd(41.12, 79.97, -26.6, 1.09)
	pt3dadd(44.58, 82.32, -27.48, 1.09)
	pt3dadd(45.86, 85.59, -29.6, 1.09)
	pt3dadd(46.08, 91.36, -30.96, 1.09)
	pt3dadd(47.04, 99.18, -30.38, 1.09)
	pt3dadd(45.84, 103.12, -29.72, 1.09)
	pt3dadd(45.47, 107.29, -29.01, 1.09)
	pt3dadd(46.71, 112.78, -27.25, 1.09)
	pt3dadd(48.1, 117.48, -26.44, 1.09)
	pt3dadd(49.16, 123, -25.7, 1.09)
	pt3dadd(51.78, 127.38, -22.76, 0.85)
	pt3dadd(52.32, 132.34, -19.01, 0.85)
	pt3dadd(53.81, 134.1, -16.99, 0.85)
	pt3dadd(56.69, 136.39, -17.92, 0.85)
	pt3dadd(60.47, 137.83, -16.7, 0.85)
	pt3dadd(63.25, 136.24, -17.38, 0.85)
	pt3dadd(65.04, 135.12, -20.18, 0.85)
  }
  apic[15] {pt3dclear()
	pt3dadd(32.04, 70.58, -20.7, 1.57)
	pt3dadd(36.87, 70.07, -19.27, 1.21)
	pt3dadd(39.15, 70.53, -16.1, 1.21)
	pt3dadd(41.73, 71.19, -13.93, 1.21)
	pt3dadd(42.86, 74.12, -12.02, 1.21)
	pt3dadd(43.11, 78.67, -10.28, 1.21)
	pt3dadd(44.91, 82.15, -8.34, 1.21)
	pt3dadd(47, 84.09, -6.29, 1.21)
	pt3dadd(48.4, 85.26, -2.23, 1.21)
	pt3dadd(51.5, 88.47, 0.81, 1.21)
	pt3dadd(54.68, 92.06, 3.85, 1.21)
	pt3dadd(56.88, 94.02, 5.91, 1.21)
	pt3dadd(60.09, 97.25, 8.98, 1.21)
	pt3dadd(62.65, 99.79, 12.04, 1.21)
	pt3dadd(65.47, 100.35, 14.24, 1.21)
	pt3dadd(66.95, 103.01, 15.19, 1.21)
	pt3dadd(71.2, 105.84, 16.36, 1.21)
	pt3dadd(73.5, 109.92, 17.28, 1.21)
	pt3dadd(75.25, 114.01, 19.17, 1.21)
	pt3dadd(76.93, 120.34, 21.92, 1.21)
	pt3dadd(79.74, 123.14, 22.97, 0.85)
	pt3dadd(80.82, 126.99, 25.82, 0.85)
	pt3dadd(82.95, 130.88, 27.75, 0.85)
	pt3dadd(87.96, 135.73, 28.85, 0.85)
	pt3dadd(90.75, 141.5, 30.71, 0.85)
	pt3dadd(92.5, 143.17, 32.76, 0.85)
  }
  apic[16] {pt3dclear()
	pt3dadd(25.36, 58.72, -25.5, 2.66)
	pt3dadd(25.66, 63.21, -27.77, 2.3)
	pt3dadd(25.51, 65.65, -30.95, 2.3)
	pt3dadd(24.75, 67.49, -33.14, 2.3)
	pt3dadd(23.9, 70.16, -35.39, 2.3)
	pt3dadd(24.15, 73.37, -38.6, 2.3)
	pt3dadd(23.95, 75.19, -41.74, 2.3)
	pt3dadd(24.61, 79.3, -44.97, 2.3)
	pt3dadd(24.83, 81.64, -48.12, 2.3)
	pt3dadd(23.64, 83.61, -51.35, 2.3)
	pt3dadd(23.19, 85.96, -53.55, 2.3)
	pt3dadd(22.55, 87.7, -55.73, 2.3)
  }
  apic[17] {pt3dclear()
	pt3dadd(22.55, 87.7, -55.73, 2.3)
	pt3dadd(21.56, 92.46, -54.1, 1.57)
	pt3dadd(21.22, 95.61, -52.32, 1.57)
	pt3dadd(19.84, 97.71, -51.56, 1.57)
	pt3dadd(16.85, 100.7, -49.98, 1.57)
	pt3dadd(15.33, 102.25, -48.19, 1.57)
	pt3dadd(12.22, 106.43, -46.69, 1.57)
	pt3dadd(10.65, 109.81, -45.03, 1.57)
	pt3dadd(9.77, 114.6, -43.39, 1.57)
	pt3dadd(9.18, 119.7, -42.76, 1.57)
	pt3dadd(9.14, 123.82, -43.03, 1.57)
	pt3dadd(8.73, 129.99, -41.45, 1.57)
	pt3dadd(7.84, 134.23, -38.77, 1.57)
	pt3dadd(6.44, 138.23, -37.13, 1.57)
	pt3dadd(4.64, 141.02, -36.45, 1.57)
	pt3dadd(2.4, 143.72, -34.79, 1.57)
	pt3dadd(1.62, 147.54, -33.09, 1.57)
	pt3dadd(0.91, 151.98, -31.42, 1.57)
	pt3dadd(0.02, 160.08, -31, 1.57)
	pt3dadd(-0.11, 165.6, -30.36, 1.57)
	pt3dadd(-2.11, 168.98, -29.73, 1.57)
	pt3dadd(-3.24, 170.46, -27.91, 1.57)
  }
  apic[18] {pt3dclear()
	pt3dadd(-3.24, 170.46, -27.91, 1.57)
	pt3dadd(-2.29, 175.18, -26.13, 1.21)
	pt3dadd(-1.66, 178.75, -23.29, 1.21)
	pt3dadd(-1.98, 179.78, -20.36, 1.21)
	pt3dadd(0.01, 180.91, -19.27, 1.21)
	pt3dadd(0.85, 181.88, -17.26, 1.21)
	pt3dadd(1.69, 184.82, -16.37, 1.21)
	pt3dadd(3.51, 187.42, -13.38, 1.21)
	pt3dadd(3.33, 189, -11.48, 1.21)
	pt3dadd(2.91, 190.77, -11.63, 1.21)
	pt3dadd(3.77, 192.83, -9.68, 1.21)
	pt3dadd(3.12, 195.89, -6.91, 1.21)
	pt3dadd(3.75, 199.44, -4.08, 1.21)
	pt3dadd(5.62, 203.55, -2.18, 1.21)
	pt3dadd(5.96, 207.13, -0.37, 1.21)
	pt3dadd(7.39, 214.33, 1.28, 1.21)
  }
}
    proc shape3d_5() {
  apic[18] {	pt3dadd(10.45, 222.2, 3.03, 1.09)
	pt3dadd(10.89, 225.26, 5.89, 1.09)
	pt3dadd(11.02, 229.78, 7.62, 1.09)
	pt3dadd(11.23, 235.56, 11.29, 1.09)
	pt3dadd(11.35, 238.77, 15.11, 1.09)
	pt3dadd(11.48, 244.16, 18.8, 1.09)
	pt3dadd(12.8, 246.95, 21.74, 1.09)
	pt3dadd(12.99, 247.88, 22.7, 1.09)
  }
  apic[19] {pt3dclear()
	pt3dadd(-3.24, 170.46, -27.91, 1.57)
	pt3dadd(-4.87, 175.31, -29.36, 1.33)
	pt3dadd(-7.14, 181, -29.9, 1.33)
	pt3dadd(-9.88, 185.54, -27.4, 1.21)
	pt3dadd(-11.5, 192.14, -24.93, 1.21)
	pt3dadd(-11.31, 196.06, -23.16, 1.21)
	pt3dadd(-10.38, 201.04, -21.39, 1.21)
	pt3dadd(-9.39, 204.2, -19.51, 1.21)
	pt3dadd(-7.52, 207.09, -17.53, 1.21)
	pt3dadd(-6.47, 209.09, -16.57, 1.21)
	pt3dadd(-9.64, 212.22, -16.02, 1.21)
	pt3dadd(-12.52, 217.42, -17.59, 1.21)
	pt3dadd(-14.01, 222.83, -20.06, 1.21)
	pt3dadd(-13.37, 226.17, -20.23, 1.21)
	pt3dadd(-12.46, 233.69, -18.63, 1.21)
	pt3dadd(-12.73, 239.31, -18, 1.21)
	pt3dadd(-12.3, 242.71, -17.18, 1.21)
  }
  apic[20] {pt3dclear()
	pt3dadd(-12.3, 242.71, -17.18, 1.21)
	pt3dadd(-13.82, 245.7, -17.49, 1.09)
	pt3dadd(-15.54, 252.5, -17.06, 1.09)
	pt3dadd(-16.11, 256.71, -15.37, 1.09)
	pt3dadd(-18.98, 263.22, -14, 1.09)
	pt3dadd(-21.45, 269.97, -11.62, 1.09)
	pt3dadd(-22.28, 273.62, -8.9, 1.09)
	pt3dadd(-24.05, 278.91, -7.37, 1.09)
	pt3dadd(-25.32, 284.01, -5.79, 1.09)
	pt3dadd(-26.37, 289.82, -3.23, 1.09)
	pt3dadd(-29.07, 298.63, -4.01, 1.09)
	pt3dadd(-32.75, 302.17, -5.54, 1.09)
	pt3dadd(-37.55, 304.87, -7.1, 1.09)
	pt3dadd(-39.78, 307.23, -8.44, 1.09)
	pt3dadd(-41.96, 309.54, -8.76, 1.09)
	pt3dadd(-44.74, 312.04, -9.14, 1.09)
	pt3dadd(-45.16, 318.11, -10.57, 1.09)
	pt3dadd(-46.25, 324.71, -12.08, 1.09)
	pt3dadd(-47.47, 328.46, -12.42, 1.09)
	pt3dadd(-49.74, 332.96, -12.89, 1.09)
	pt3dadd(-52.65, 337.74, -13.43, 0.85)
  }
  apic[21] {pt3dclear()
	pt3dadd(-12.3, 242.71, -17.18, 1.21)
	pt3dadd(-9.84, 248.86, -16.37, 1.21)
	pt3dadd(-11.01, 256.21, -15.93, 1.21)
	pt3dadd(-11.81, 258.06, -16.12, 1.21)
  }
  apic[22] {pt3dclear()
	pt3dadd(-11.81, 258.06, -16.12, 1.21)
	pt3dadd(-13.73, 260.28, -16.41, 1.09)
	pt3dadd(-17.82, 261.18, -16.8, 1.09)
	pt3dadd(-19.81, 262.14, -16.01, 1.09)
	pt3dadd(-23.38, 263.17, -15.36, 1.09)
	pt3dadd(-24.41, 264.22, -14.5, 1.09)
	pt3dadd(-29.32, 268.21, -13.14, 1.09)
	pt3dadd(-30.89, 272.02, -10.49, 1.09)
	pt3dadd(-33, 277.04, -8.97, 1.09)
	pt3dadd(-34.08, 281.43, -7.33, 1.09)
	pt3dadd(-33, 285.75, -6.52, 1.09)
	pt3dadd(-32.74, 288.83, -4.68, 1.09)
	pt3dadd(-32.12, 290.85, -2.75, 1.09)
	pt3dadd(-34.87, 293.09, -0.1, 1.09)
	pt3dadd(-37.35, 296.32, 2.5, 1.09)
	pt3dadd(-39.83, 300.64, 5.04, 1.09)
	pt3dadd(-42.52, 303.48, 7.66, 1.09)
	pt3dadd(-44.12, 306.44, 10.36, 1.09)
	pt3dadd(-47.63, 309.72, 11.88, 1.09)
	pt3dadd(-49.61, 312.33, 13.56, 1.09)
  }
  apic[23] {pt3dclear()
	pt3dadd(-11.81, 258.06, -16.12, 1.21)
	pt3dadd(-12.58, 264.97, -15.61, 1.21)
	pt3dadd(-12.99, 265.41, -15.68, 1.21)
  }
  apic[24] {pt3dclear()
	pt3dadd(-12.99, 265.41, -15.68, 1.21)
	pt3dadd(-12.19, 267.4, -12.72, 0.85)
	pt3dadd(-10.69, 270.26, -10.78, 0.85)
	pt3dadd(-8.61, 271.76, -9.7, 0.85)
	pt3dadd(-5.07, 273.18, -8.5, 0.85)
	pt3dadd(-2.7, 275.44, -7.45, 0.85)
	pt3dadd(-0.25, 280.39, -6.57, 0.85)
	pt3dadd(2.54, 283.96, -6.57, 0.85)
	pt3dadd(5.09, 287.94, -5.62, 0.85)
	pt3dadd(8.97, 288.98, -8.39, 0.85)
	pt3dadd(11.85, 288.74, -9.15, 0.85)
	pt3dadd(17.1, 289.1, -9.76, 0.85)
	pt3dadd(22.68, 293.15, -8.57, 0.85)
	pt3dadd(25.17, 295.44, -7.51, 0.85)
	pt3dadd(27.97, 298.1, -6.45, 0.85)
  }
  apic[25] {pt3dclear()
	pt3dadd(-12.99, 265.41, -15.68, 1.21)
	pt3dadd(-15.83, 271.68, -14.29, 1.21)
	pt3dadd(-17.16, 274.74, -15.6, 1.21)
	pt3dadd(-17.26, 281.33, -17.04, 1.21)
	pt3dadd(-20.36, 284.18, -15.46, 1.21)
	pt3dadd(-22.14, 289.16, -14.91, 1.21)
	pt3dadd(-25.9, 294.41, -14.55, 1.21)
	pt3dadd(-27.93, 299.79, -13.04, 1.21)
	pt3dadd(-28.7, 307.92, -12.62, 1.21)
	pt3dadd(-30.45, 314.74, -10.18, 1.21)
	pt3dadd(-32.61, 321.57, -8.78, 1.21)
	pt3dadd(-33.19, 328.98, -8.3, 1.21)
	pt3dadd(-32.03, 332.32, -7.41, 1.21)
  }
  apic[26] {pt3dclear()
	pt3dadd(-32.03, 332.32, -7.41, 1.21)
	pt3dadd(-34.53, 334.03, -5.71, 1.21)
	pt3dadd(-36.34, 337.25, -4.05, 1.21)
	pt3dadd(-37.54, 341.76, -2.43, 1.21)
	pt3dadd(-37.79, 346.36, -0.73, 1.21)
	pt3dadd(-38.89, 351.12, 0.87, 1.21)
	pt3dadd(-41.52, 356.45, 2.33, 1.21)
	pt3dadd(-44.05, 360.94, 3.85, 1.21)
	pt3dadd(-46.05, 366.08, 5.37, 1.21)
	pt3dadd(-48.87, 368.48, 7.01, 1.21)
	pt3dadd(-51.57, 371.44, 9.62, 1.21)
  }
  apic[27] {pt3dclear()
	pt3dadd(-32.03, 332.32, -7.41, 1.21)
	pt3dadd(-29.11, 338.77, -6.59, 1.21)
	pt3dadd(-26.26, 344.83, -7.75, 1.21)
	pt3dadd(-23.42, 349.9, -8.86, 1.21)
	pt3dadd(-21.37, 352.65, -10.88, 1.21)
  }
  apic[28] {pt3dclear()
	pt3dadd(-21.37, 352.65, -10.88, 1.21)
	pt3dadd(-21.34, 355.93, -11.09, 0.85)
	pt3dadd(-20.95, 359.37, -11.28, 0.85)
	pt3dadd(-20.22, 363.62, -12.5, 0.85)
	pt3dadd(-18.06, 368.14, -13.62, 0.85)
	pt3dadd(-17.71, 373.15, -13.91, 0.85)
	pt3dadd(-18.01, 376.15, -14.13, 0.85)
	pt3dadd(-16.75, 379.2, -14.22, 0.85)
	pt3dadd(-18.65, 385.6, -15.79, 0.85)
	pt3dadd(-20.84, 389.03, -14.17, 0.85)
	pt3dadd(-21.68, 393.57, -12.52, 0.85)
	pt3dadd(-24.06, 398.8, -11.04, 0.85)
	pt3dadd(-26, 403.35, -9.47, 0.85)
	pt3dadd(-27.58, 408.05, -7.89, 0.85)
	pt3dadd(-29.44, 414.19, -6.42, 0.85)
	pt3dadd(-31.67, 419.31, -4.92, 0.85)
	pt3dadd(-33.48, 421.88, -2.21, 0.85)
	pt3dadd(-34.53, 424.49, 1.55, 0.85)
	pt3dadd(-34.47, 427.74, 4.36, 0.85)
	pt3dadd(-36.65, 433.48, 5.83, 0.85)
	pt3dadd(-36.44, 437.38, 5.59, 0.85)
	pt3dadd(-34.48, 443.95, 4.33, 0.85)
	pt3dadd(-33.72, 447.52, 2.15, 0.85)
	pt3dadd(-33.37, 451.76, -2.11, 0.85)
	pt3dadd(-34.96, 456.03, -6.53, 0.85)
	pt3dadd(-36.62, 459.47, -8.89, 0.85)
  }
  apic[29] {pt3dclear()
	pt3dadd(-21.37, 352.65, -10.88, 1.21)
	pt3dadd(-15.49, 354.71, -12.55, 0.97)
	pt3dadd(-11.9, 357.07, -13.42, 0.97)
	pt3dadd(-6.89, 361.71, -15.33, 0.97)
	pt3dadd(-5.1, 365.22, -16.42, 0.97)
	pt3dadd(-4.23, 368.59, -16.56, 0.97)
	pt3dadd(-4.15, 373.25, -17.86, 0.85)
	pt3dadd(-2.48, 376.33, -19.93, 0.85)
	pt3dadd(-0.3, 378.84, -21.93, 0.85)
	pt3dadd(1.81, 381.76, -24.96, 0.85)
	pt3dadd(4.56, 384.26, -27.92, 0.85)
	pt3dadd(7.08, 387.39, -31.94, 0.85)
	pt3dadd(9.33, 389.43, -33.9, 0.85)
	pt3dadd(12.23, 393.35, -35.93, 0.85)
	pt3dadd(16.34, 402.13, -38.17, 0.85)
	pt3dadd(18.47, 407.02, -39.32, 0.85)
	pt3dadd(22.41, 410.75, -40.25, 0.85)
	pt3dadd(23.76, 413.3, -42.32, 0.85)
	pt3dadd(24.73, 417.14, -44.5, 0.85)
	pt3dadd(26.8, 419.64, -46.5, 0.85)
	pt3dadd(27.87, 420.1, -48.46, 0.85)
  }
  apic[30] {pt3dclear()
	pt3dadd(22.55, 87.7, -55.73, 2.3)
	pt3dadd(23.86, 89.6, -59.76, 1.93)
	pt3dadd(24.49, 90.86, -61.8, 1.93)
	pt3dadd(24.39, 92.6, -62.93, 1.93)
	pt3dadd(25.35, 93.47, -63.91, 1.93)
  }
  apic[31] {pt3dclear()
	pt3dadd(25.35, 93.47, -63.91, 1.93)
	pt3dadd(27.56, 94.54, -60.79, 1.09)
	pt3dadd(28.9, 96.2, -59.78, 1.09)
	pt3dadd(32.03, 96.42, -59.55, 1.09)
	pt3dadd(34.37, 95.28, -58.28, 1.09)
	pt3dadd(37.55, 95.23, -60.03, 1.09)
	pt3dadd(40.43, 94.54, -61.77, 1.09)
	pt3dadd(44.65, 93.87, -63.4, 1.09)
	pt3dadd(46.36, 92.26, -66.18, 1.09)
	pt3dadd(48.06, 92.11, -69.05, 1.09)
	pt3dadd(49.56, 94.31, -71.08, 1.09)
	pt3dadd(52.35, 95.23, -73.93, 1.09)
	pt3dadd(54.56, 95.2, -75.76, 1.09)
	pt3dadd(58.14, 96.04, -77.54, 1.09)
	pt3dadd(61.75, 96.52, -79.29, 1.09)
	pt3dadd(65.63, 99.22, -81.16, 0.97)
	pt3dadd(67.07, 99.15, -84.06, 0.97)
	pt3dadd(70.06, 100.24, -84.9, 0.97)
	pt3dadd(72.71, 102.28, -85.82, 0.97)
	pt3dadd(75.43, 101.5, -88.57, 0.97)
	pt3dadd(76.64, 101.84, -90.5, 0.97)
	pt3dadd(78.39, 101.95, -91.38, 0.97)
  }
  apic[32] {pt3dclear()
	pt3dadd(25.35, 93.47, -63.91, 1.93)
	pt3dadd(25.43, 96.71, -63.11, 1.57)
	pt3dadd(25.77, 100.51, -63.33, 1.57)
	pt3dadd(26.98, 101.73, -63.31, 1.57)
  }
  apic[33] {pt3dclear()
	pt3dadd(26.98, 101.73, -63.31, 1.57)
	pt3dadd(28.7, 102.97, -60.23, 1.21)
	pt3dadd(29.64, 105.4, -58.3, 1.21)
	pt3dadd(29.7, 108.1, -56.46, 1.21)
	pt3dadd(34.82, 108.48, -55.07, 1.21)
  }
    }
    proc shape3d_6() {
  apic[33] {	pt3dadd(36.72, 110.45, -54.04, 1.21)
	pt3dadd(39.08, 112.71, -52.99, 1.21)
	pt3dadd(42.46, 115.59, -49.89, 1.21)
	pt3dadd(46.7, 116.11, -48.58, 1.21)
	pt3dadd(48.88, 117.86, -47.51, 1.21)
	pt3dadd(52.02, 116.97, -49.21, 1.21)
	pt3dadd(55.71, 117.17, -49.94, 1.21)
	pt3dadd(58.44, 120.13, -49.91, 1.21)
	pt3dadd(60.96, 120.83, -48.74, 1.21)
	pt3dadd(63.8, 118.41, -47.36, 0.97)
	pt3dadd(66.92, 119.39, -48.18, 0.97)
	pt3dadd(71.06, 121.99, -50.02, 0.97)
	pt3dadd(73.8, 123.84, -51.93, 0.97)
	pt3dadd(77.73, 124.84, -53.69, 0.97)
	pt3dadd(80.96, 126.61, -55.56, 0.97)
	pt3dadd(83.6, 129.66, -57.55, 0.97)
	pt3dadd(86.72, 131.86, -58.45, 0.97)
	pt3dadd(90.44, 134.9, -60.36, 0.97)
	pt3dadd(93.59, 137.64, -62.29, 0.97)
	pt3dadd(95.45, 139.76, -64.29, 0.97)
  }
  apic[34] {pt3dclear()
	pt3dadd(95.45, 139.76, -64.29, 0.97)
	pt3dadd(97.6, 137.68, -69.01, 0.97)
	pt3dadd(98.68, 135.93, -72.83, 0.97)
	pt3dadd(100.49, 136.55, -76.75, 0.97)
	pt3dadd(105.28, 135.76, -79.33, 0.97)
	pt3dadd(108.79, 134.33, -81.97, 0.97)
	pt3dadd(111.09, 131.69, -84.64, 0.97)
  }
  apic[35] {pt3dclear()
	pt3dadd(95.45, 139.76, -64.29, 0.97)
	pt3dadd(95.33, 142.16, -64.45, 0.97)
	pt3dadd(93.14, 143.95, -63.74, 0.97)
  }
  apic[36] {pt3dclear()
	pt3dadd(26.98, 101.73, -63.31, 1.57)
	pt3dadd(26.15, 104.72, -64.57, 1.33)
	pt3dadd(24.45, 109.08, -65.99, 1.33)
	pt3dadd(23.31, 109.78, -68.14, 1.33)
	pt3dadd(20.8, 109.74, -70.35, 1.33)
	pt3dadd(18.44, 109.35, -72.52, 1.33)
	pt3dadd(16.51, 110.69, -74.77, 1.33)
	pt3dadd(15.29, 111.68, -77.95, 1.33)
	pt3dadd(13.88, 112.94, -82.16, 1.33)
	pt3dadd(11.85, 113.72, -85.39, 1.33)
	pt3dadd(10.04, 114.09, -89.58, 1.33)
	pt3dadd(9.16, 114.36, -94.69, 1.33)
	pt3dadd(8.46, 115.04, -97.81, 1.33)
	pt3dadd(7.92, 115.93, -99.92, 1.33)
	pt3dadd(8.08, 115.81, -101.91, 1.33)
  }
  dend[45] {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(-0.25, -1.14, 6.44, 3.87)
	pt3dadd(-1.24, -3.53, 13.55, 3.87)
	pt3dadd(-2.76, -6.17, 19.63, 2.06)
	pt3dadd(-7.25, -11.11, 21.6, 1.69)
	pt3dadd(-10.54, -14.62, 21.56, 1.33)
	pt3dadd(-13.42, -19.43, 19.62, 1.33)
	pt3dadd(-16.25, -22.85, 16.6, 1.33)
	pt3dadd(-19.81, -26.58, 15.55, 1.33)
	pt3dadd(-22.69, -27.32, 14.36, 1.33)
  }
    }
    proc basic_shape() {
        shape3d_1()
        shape3d_2()
        shape3d_3()
        shape3d_4()
        shape3d_5()
        shape3d_6()
    }
    basic_shape()

  for i=0,9{
	axon[i] {pt3dclear()
		pt3dadd(-5*i-7.40274, 0, 0, 0.5) 
		pt3dadd(-2.5*(i+1)-7.40274, 0, 0, 0.5) 
		pt3dadd(-5*(i+1)-7.40274, 0, 0, 0.5)
	}
  }
  axon[10]{pt3dclear()
	pt3dadd(-57.40274, 0, 0, 0.5) 
	pt3dadd(-107.40274, 0, 0, 0.5) 
	pt3dadd(-157.40274, 0, 0, 0.5)
  }
}


objref all, dendrite_list, soma_list, axon_list
proc append_sections() { local i
	objref all, dendrite_list, apical_list, soma_list, axon_list

	all = new SectionList()
	soma_list = new SectionList()
	axon_list = new SectionList()
	dendrite_list = new SectionList()
	apical_list = new SectionList()

	soma[0] all.append()
	soma[0] soma_list.append()
	
	for i=0,45{
		dend[i] all.append()
		dend[i] dendrite_list.append()
	}

	for i=0,36{
		apic[i] all.append()
		apic[i] apical_list.append()
	}
	
	for i=0,10{
		axon[i] all.append()
	}
	
	axon[9] axon_list.append() //Only append AIS segment to receive synapses
}

/*
external lambda_f
proc set_nseg() {
  	forsec all { nseg = int((L/(0.1*lambda_f(100))+.9)/2)*2 + 1  }
}
*/

proc mechinit() {

	// resting membrane potential. Must lie between Na+ and K+ reversal potentials
	Vrest=-80
	
	// Temperature of simulation
	celsius = 34.0

	// Membrane resistance in ohm*cm2
	RmDend = 40000 //1/0.00018
	RmSoma = 21000 //1/0.00018
	RmAx = 1000
	
	// Membrane capacitance in uF/cm2
	CmSoma= 1.5
	CmDend = 1.5

	// Axial resistance in ohm*cm
	RaDend= 150
	RaSoma= 150	
	RaAx = 150
	
	// Calcium concentrations in mM
	ca_outside = 2
	ca_inside = 5.e-6 // 50.e-6
	catau = 10

	// reversal potentials in mV
	ekval = -90
	enaval = 45
	eHCNval = -30
	ecaval = 8.314*(273.15+celsius)/(2*9.649e4)*log(ca_outside/ca_inside)*1000 // about 170, otherwise set to 130
	
	if (Vrest<ekval) Vrest=ekval // Cell cannot rest lower than K+ reversal potential
	if (Vrest>enaval) Vrest=enaval // Cell cannot rest higher than Na+ reversal potential
	eleakval = Vrest

	// max ion channel conductances in mho/cm2
	gna = 0.015
	gnap = 0.000559//0.000559 // 0.000551 
	gkdr = 0.002//0.002 
	ghd = 1.5e-5//1.5e-5
	gca = 5.5e-4 
	gm = 0.00224 // 0.00222  
	gsAHP = 0.05//0.0019
	gkap = 0.002 
			
	nash=10

	// axon channels
	gna12_ais_max = 3000   // Nav1.2 
	gna16_ais_max = 3200   // Nav1.6
	gkv_axon = 1000
	nash=10
	
	tha_na16 = -43
	tha_na12 = -30
	
}

proc insert_mechs() {
 

	soma[0]{
		Ra = RaSoma
		cm=CmSoma
		insert cadyn gcabar_cadyn = gca  eca = 120
		insert leak el_leak= -72  glbar_leak = 1/RmSoma 
		insert hd ghdbar_hd = ghd 
		insert na3 sh_na3=nash ar_na3=1	gbar_na3 = 3*gna
		insert nap gbar_nap = gnap
		insert kdr gbar_kdr = gkdr
		insert capool taucas = 1000  fcas_capool = 0.05 //only in dend and p_dend
		insert sAHP gsAHPbar_sAHP = gsAHP
		insert im gbar_im = gm
		insert kap gkabar_kap = gkap
	} 

	for i=0,45{
		dend[i] {
			Ra = RaDend
			cm = CmDend
			insert cadyn gcabar_cadyn = gca eca = 120
			insert leak el_leak = -72  glbar_leak = 1/RmDend
			insert hd ghdbar_hd = ghd 
			insert na3 sh_na3=nash ar_na3=1	gbar_na3 = gna
			insert nap gbar_nap = 0  gbar_nap(1/(2*nseg)) = 0.8*gnap
			insert kdr gbar_kdr = gkdr
			insert capool taucas = 1000  fcas_capool = 0.05 
			insert sAHP gsAHPbar_sAHP = 0
			insert im gbar_im = 0 gbar_im(1/(2*nseg)) = 0.8*gm
			insert kap gkabar_kap = 0
		}	
	}

    for i=0,36{
		apic[i] {
			Ra = RaDend
			cm = CmDend
			insert cadyn gcabar_cadyn = gca eca = 120
			insert leak el_leak = -72  glbar_leak = 1/RmDend
			insert hd ghdbar_hd = ghd 
			insert na3 sh_na3=nash ar_na3=1	gbar_na3 = gna
			insert nap gbar_nap = 0  gbar_nap(1/(2*nseg)) = 0.8*gnap
			insert kdr gbar_kdr = gkdr
			insert capool taucas = 1000  fcas_capool = 0.05 
			insert sAHP gsAHPbar_sAHP = 0
			insert im gbar_im = 0 gbar_im(1/(2*nseg)) = 0.8*gm
			insert kap gkabar_kap = 0
		}	
	}	

	for i=0,9 axon[i] {
		insert pas
		Ra = RaAx//50000
		cm = 0.8 
		g_pas = 1/(RmAx+200)
		e_pas = -70
		insert na12  //gbar_na12=0
		insert na16  //gbar_na16=0
		insert kv    //gbar_kv = 0
		ena = 45
		ek = -90
	}
	axon[10]{
		insert pas
		Ra = RaAx
		cm = 0.2 //myelin 
		g_pas = 1/RmAx
		e_pas = -70
		insert na12  
		insert na16  
		insert kv    
		ena = 45
		ek = -90
	}
	
	axon[0]. gbar_na12= gna12_ais_max      *	0.96	*	1             								
	axon[1]. gbar_na12= gna12_ais_max  		*	0.9	*	1                      
	axon[2]. gbar_na12= gna12_ais_max  		*	0.75	*	1                    
	axon[3]. gbar_na12= gna12_ais_max  		*	0.55	*	0.95              
	axon[4]. gbar_na12= gna12_ais_max  		*	0.366985879	*	0.880142857  
	axon[5]. gbar_na12= gna12_ais_max  		*	0.2	*	0.75                 
	axon[6]. gbar_na12= gna12_ais_max  		*	0.100330761	*	0.647857143  
	axon[7]. gbar_na12= gna12_ais_max  		*	0.011532125	*	0.520285714 
	axon[8]. gbar_na12= gna12_ais_max  		*	0	*	0.428571429            
	axon[9]. gbar_na12= gna12_ais_max  		*	0	*	0.342857143 
	axon[10]. gbar_na12= gna12_ais_max  		*	0	*	0.342857143 
		
	axon[0]. gbar_na16 = gna16_ais_max	*	0.04	*	1   
	axon[1]. gbar_na16 = gna16_ais_max	*	0.1	*	1   
	axon[2]. gbar_na16 = gna16_ais_max	*	0.25	*	1   
	axon[3]. gbar_na16 = gna16_ais_max	*	0.45	*	0.95   
	axon[4]. gbar_na16 = gna16_ais_max	*	0.633014121	*	0.880142857   
	axon[5]. gbar_na16 = gna16_ais_max	*	0.8	*	0.75   
	axon[6]. gbar_na16 = gna16_ais_max	*	0.899669239	*	0.647857143   
	axon[7]. gbar_na16 = gna16_ais_max	*	0.988467875	*	0.520285714   
	axon[8]. gbar_na16 = gna16_ais_max	*	1	*	0.428571429   
	axon[9]. gbar_na16 = gna16_ais_max	*	1	*	0.342857143  
	axon[10]. gbar_na16 = gna16_ais_max	*	1	*	0.342857143  
				
	axon[0]. gbar_kv = gkv_axon	*	0.2 
	axon[1]. gbar_kv = gkv_axon	*	0.3 
	axon[2]. gbar_kv = gkv_axon	*	0.4 
	axon[3]. gbar_kv = gkv_axon	*	0.5 
	axon[4]. gbar_kv = gkv_axon	*	0.6 
	axon[5]. gbar_kv = gkv_axon	*	0.7 
	axon[6]. gbar_kv = gkv_axon	*	0.8 
	axon[7]. gbar_kv = gkv_axon	*	0.9
	axon[8]. gbar_kv = gkv_axon	*	1
	axon[9]. gbar_kv = gkv_axon	*	1
	axon[10]. gbar_kv = gkv_axon	*	1
	
}

init()

/*
proc set_chanparams() {
	forsec all {
		
	}
}


proc connect_pre() {  // $o1 target point process, $o2 returned NetCon
	axon[10] $o2 = new NetCon (&v(0.5), $o1)
			$o2.threshold = -10

}

func is_art()  { return 0 }

proc position(){ local i
	forall {
		for i = 0, n3d()-1 {
			pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
		}
	}
	x = $1  y = $2  z = $3	
}

proc get_root() {local i localobj sref
	rootlist = new SectionList()
	rootlist.allroots()
	i=0
	forsec all {
		sref = new SectionRef()
		if (sref.has_parent==0) {
			myroot = secname()
			i=i+1
		}
		for(x,0) {
			if (diam(x) <=0.01) print "WARNING: tiny diameter of ",  diam(x), " um at ", secname(), ", point ", x, "!"
			if (diam3d(x) <=0.01) print "WARNING: tiny 3d diameter of ", diam3d(x), " um at ", secname(), ", point ", x, "!"
		}
		if (L <=0.001) print "WARNING: tiny length of ", L, " um at ", secname(), "!"
	}
	if (i>1) {
		print "WARNING: cell ", gid, " has ", i, " root sections!"
	}
}
strdef myStr

objref newSecRef, syn
proc define_synapses() {
	ind = $1
	i = 0

	access soma[0]
	{distance()}

	for celltype = 0, numCellTypes-1 {
		templist = new List ()
		for r=0, cellType[ind].SynList[celltype].count()-1 {
		
			execute(cellType[ind].SynList[celltype].object(r).NewSynStr, this) // sets newSecRef
						
			forsec newSecRef {		
				for (x,0) {
					// Decides if distance is correct
					execute(cellType[ind].SynList[celltype].object(r).CondStr, this)
					
					 if (y==1) {
						// Declares new synapse
						execute(cellType[ind].SynList[celltype].object(r).SynStr, this)
						if (cellType[ind].SynList[celltype].object(r).GABAabFlag==0) {
							syn.tau1 = cellType[ind].SynList[celltype].object(r).tau1
							syn.tau2 = cellType[ind].SynList[celltype].object(r).tau2
							syn.e = cellType[ind].SynList[celltype].object(r).efirst
							if (strcmp(cellType[ind].SynList[celltype].object(r).SynType,"MyExp2Sidnw")==0) {
								syn.nw = cellType[ind].SynList[celltype].object(r).Scaling
							}
						} else {
							syn.tau1a = cellType[ind].SynList[celltype].object(r).tau1a
							syn.tau2a = cellType[ind].SynList[celltype].object(r).tau2a
							syn.ea = cellType[ind].SynList[celltype].object(r).ea
							syn.tau1b = cellType[ind].SynList[celltype].object(r).tau1b
							syn.tau2b = cellType[ind].SynList[celltype].object(r).tau2b
							syn.eb = cellType[ind].SynList[celltype].object(r).eb
						}
						syn.sid = i
						templist.append(syn)
						i = i + 1
					}
				}
			}
		}
		pre_list.append(templist)
		findme = 1
	}
}

endtemplate detailedpyrtypeA
*/
